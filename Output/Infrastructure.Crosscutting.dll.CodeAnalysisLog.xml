<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="d:\program files\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Namespaces>
  <Namespace Name="Infrastructure.Crosscutting.Caching">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.Caching”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.ComponentModel">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.ComponentModel”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.Core.TypeFinder">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.Core.TypeFinder”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.Exceptions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.Exceptions”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.IoC">
   <Messages>
    <Message Id="Io" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">更正命名空间名称“Infrastructure.Crosscutting.IoC”中“Io”的大小写，将其改为“IO”。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.License">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.License”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.Utility">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.Utility”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.Utility.CustomAttribute">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.Utility.CustomAttribute”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.Validator.BaseClasses">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.Validator.BaseClasses”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.Validator.Exceptions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.Validator.Exceptions”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Infrastructure.Crosscutting.Validator.Interfaces">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">考虑将“Infrastructure.Crosscutting.Validator.Interfaces”中定义的类型与另一个命名空间合并。</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="F:\MyCode\GitHub_MyCommonLibrary\Output\Infrastructure.Crosscutting.dll">
   <Modules>
    <Module Name="infrastructure.crosscutting.dll">
     <Namespaces>
      <Namespace Name="Infrastructure.Crosscutting.Caching">
       <Types>
        <Type Name="CacheExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get`1(Infrastructure.Crosscutting.Caching.ICacheManager,System.String,System.Int32,System.Func`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Caching" File="Extensions.cs" Line="17">在外部可见方法 'CacheExtensions.Get&lt;T&gt;(this ICacheManager, string, int, Func&lt;T&gt;)' 中，请在使用参数“cacheManager”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Caching" File="Extensions.cs" Line="23">在外部可见方法 'CacheExtensions.Get&lt;T&gt;(this ICacheManager, string, int, Func&lt;T&gt;)' 中，请在使用参数“acquire”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ICacheManager" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get`1(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">重命名虚拟/接口成员 'ICacheManager.Get&lt;T&gt;(string)'，使它不再与保留的语言关键字“Get”冲突。如果使用保留的关键字作为虚拟/接口成员的名称，则会使其他语言的使用者很难重写/实现该成员。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Set(System.String,System.Object,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Set" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">重命名虚拟/接口成员 'ICacheManager.Set(string, object, int)'，使它不再与保留的语言关键字“Set”冲突。如果使用保留的关键字作为虚拟/接口成员的名称，则会使其他语言的使用者很难重写/实现该成员。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MemoryCacheManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Cache" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Caching" File="MemoryCacheManager.cs" Line="16">从未使用 'MemoryCacheManager.Cache' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.ComponentModel">
       <Types>
        <Type Name="GenericListTypeConverter`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_typeConverter" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'GenericListTypeConverter&lt;T&gt;._typeConverter' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\ComponentModel" File="GenericListTypeConverter.cs" Line="37">在外部可见方法 'GenericListTypeConverter&lt;T&gt;.CanConvertFrom(ITypeDescriptorContext, Type)' 中，请在使用参数“sourceType”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WriteLockDisposable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">对 'WriteLockDisposable' 提供 Dispose(bool) 的可重写实现或将该类型标记为密封。对 Dispose(false) 的调用应仅清理本机资源。对 Dispose(true) 的调用应既清理托管资源又清理本机资源。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Threading.ReaderWriterLockSlim)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\ComponentModel" File="WriteLockDisposable.cs" Line="23">在外部可见方法 'WriteLockDisposable.WriteLockDisposable(ReaderWriterLockSlim)' 中，请在使用参数“rwLock”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.IDisposable.Dispose()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\ComponentModel" File="WriteLockDisposable.cs" Line="27">修改 'WriteLockDisposable.IDisposable.Dispose()'，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Issue>
             <Issue Name="RenameDispose" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\ComponentModel" File="WriteLockDisposable.cs" Line="27">将 'WriteLockDisposable.IDisposable.Dispose()' 重命名为“Dispose”，并确保将其声明为 public 和 sealed。</Issue>
            </Message>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\ComponentModel" File="WriteLockDisposable.cs" Line="27">将 'WriteLockDisposable' 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 'IDisposable.Dispose()' 的功能且对派生类可见的新方法。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Configuration">
       <Types>
        <Type Name="ISettings" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Warning">定义一个自定义特性来替换 'ISettings'。</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="NopConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Create(System.Object,System.Object,System.Xml.XmlNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Configuration" File="NopConfig.cs" Line="44">在外部可见方法 'NopConfig.Create(object, object, XmlNode)' 中，请在使用参数“section”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScheduleTasks" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Configuration" File="NopConfig.cs" Line="143">修改成员 'NopConfig.ScheduleTasks'，使它不再公开具体类型 'XmlNode'。请使用 IXPathNavigable 来表示 XML 数据源。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Core">
       <Types>
        <Type Name="EngineContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'EngineContext' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateEngineInstance(Infrastructure.Crosscutting.Configuration.NopConfig)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core" File="EngineContext.cs" Line="56">'EngineContext.CreateEngineInstance(NopConfig)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IEngine" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsTypeRegistered`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'IEngine.IsTypeRegistered&lt;T&gt;()' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterType`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'IEngine.RegisterType&lt;T&gt;()' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Singleton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'Singleton' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core" File="Singleton.cs" Line="74">声明 'Singleton' 中的静态字段时应初始化所有这些字段，并移除显式静态构造函数。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Singleton`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'Singleton&lt;T&gt;' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Instance" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core" File="Singleton.cs" Line="22">将 'Singleton&lt;T&gt;.Instance' 从 'Singleton&lt;T&gt;' 中移除或者使其成为实例成员。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SingletonDictionary`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'SingletonDictionary&lt;TKey, TValue&gt;' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Instance" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core" File="Singleton.cs" Line="64">将 'SingletonDictionary&lt;TKey, TValue&gt;.Instance' 从 'SingletonDictionary&lt;TKey, TValue&gt;' 中移除或者使其成为实例成员。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SingletonList`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'SingletonList&lt;T&gt;' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Instance" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core" File="Singleton.cs" Line="45">将 'SingletonList&lt;T&gt;.Instance' 从 'SingletonList&lt;T&gt;' 中移除或者使其成为实例成员。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Core.TypeFinder">
       <Types>
        <Type Name="AppDomainTypeFinder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddConfiguredAssemblies(System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Reflection.Assembly&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="228">更改 'AppDomainTypeFinder.AddConfiguredAssemblies(List&lt;string&gt;, List&lt;Assembly&gt;)' 中的 'List&lt;Assembly&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="228">更改 'AppDomainTypeFinder.AddConfiguredAssemblies(List&lt;string&gt;, List&lt;Assembly&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="232">在外部可见方法 'AppDomainTypeFinder.AddConfiguredAssemblies(List&lt;string&gt;, List&lt;Assembly&gt;)' 中，请在使用参数“addedAssemblyNames”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="234">在外部可见方法 'AppDomainTypeFinder.AddConfiguredAssemblies(List&lt;string&gt;, List&lt;Assembly&gt;)' 中，请在使用参数“assemblies”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyNames" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="57">通过移除属性 setter 将 'AppDomainTypeFinder.AssemblyNames' 更改为只读。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindAssembliesWithAttribute`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="143">考虑使用 'AppDomainTypeFinder.FindAssembliesWithAttribute&lt;T&gt;()' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindAssembliesWithAttribute`1(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="158">考虑使用 'AppDomainTypeFinder.FindAssembliesWithAttribute&lt;T&gt;(IEnumerable&lt;Assembly&gt;)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindAssembliesWithAttribute`1(System.IO.DirectoryInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="182">考虑使用 'AppDomainTypeFinder.FindAssembliesWithAttribute&lt;T&gt;(DirectoryInfo)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="183">在外部可见方法 'AppDomainTypeFinder.FindAssembliesWithAttribute&lt;T&gt;(DirectoryInfo)' 中，请在使用参数“assemblyPath”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType(System.Type,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="96">用提供所有默认形参的重载来替换方法 'AppDomainTypeFinder.FindClassesOfType(Type, bool)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">用提供所有默认形参的重载来替换方法 'AppDomainTypeFinder.FindClassesOfType(Type, IEnumerable&lt;Assembly&gt;, bool)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType`1(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="91">用提供所有默认形参的重载来替换方法 'AppDomainTypeFinder.FindClassesOfType&lt;T&gt;(bool)'。</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="91">考虑使用 'AppDomainTypeFinder.FindClassesOfType&lt;T&gt;(bool)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType`1(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="101">用提供所有默认形参的重载来替换方法 'AppDomainTypeFinder.FindClassesOfType&lt;T&gt;(IEnumerable&lt;Assembly&gt;, bool)'。</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="101">考虑使用 'AppDomainTypeFinder.FindClassesOfType&lt;T&gt;(IEnumerable&lt;Assembly&gt;, bool)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType`2(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="137">用提供所有默认形参的重载来替换方法 'AppDomainTypeFinder.FindClassesOfType&lt;T, TAssemblyAttribute&gt;(bool)'。</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="137">考虑使用 'AppDomainTypeFinder.FindClassesOfType&lt;T, TAssemblyAttribute&gt;(bool)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Core\TypeFinder" File="AppDomainTypeFinder.cs" Line="137">考虑使用 'AppDomainTypeFinder.FindClassesOfType&lt;T, TAssemblyAttribute&gt;(bool)' 在任何对它的调用中都不需要显式类型参数 'TAssemblyAttribute' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ITypeFinder" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FindAssembliesWithAttribute`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'ITypeFinder.FindAssembliesWithAttribute&lt;T&gt;()' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindAssembliesWithAttribute`1(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'ITypeFinder.FindAssembliesWithAttribute&lt;T&gt;(IEnumerable&lt;Assembly&gt;)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindAssembliesWithAttribute`1(System.IO.DirectoryInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'ITypeFinder.FindAssembliesWithAttribute&lt;T&gt;(DirectoryInfo)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType(System.Type,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">用提供所有默认形参的重载来替换方法 'ITypeFinder.FindClassesOfType(Type, bool)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">用提供所有默认形参的重载来替换方法 'ITypeFinder.FindClassesOfType(Type, IEnumerable&lt;Assembly&gt;, bool)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType`1(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">用提供所有默认形参的重载来替换方法 'ITypeFinder.FindClassesOfType&lt;T&gt;(bool)'。</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'ITypeFinder.FindClassesOfType&lt;T&gt;(bool)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType`1(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">用提供所有默认形参的重载来替换方法 'ITypeFinder.FindClassesOfType&lt;T&gt;(IEnumerable&lt;Assembly&gt;, bool)'。</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'ITypeFinder.FindClassesOfType&lt;T&gt;(IEnumerable&lt;Assembly&gt;, bool)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindClassesOfType`2(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">用提供所有默认形参的重载来替换方法 'ITypeFinder.FindClassesOfType&lt;T, TAssemblyAttribute&gt;(bool)'。</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'ITypeFinder.FindClassesOfType&lt;T, TAssemblyAttribute&gt;(bool)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
             <Issue Certainty="75" Level="Warning">考虑使用 'ITypeFinder.FindClassesOfType&lt;T, TAssemblyAttribute&gt;(bool)' 在任何对它的调用中都不需要显式类型参数 'TAssemblyAttribute' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAssemblies()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">如果可行，请将 'ITypeFinder.GetAssemblies()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.CrossCutting.Cryptography">
       <Types>
        <Type Name="Crypto" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'Crypto' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Cryptography" File="Crypto.cs" Line="21">声明 'Crypto' 中的静态字段时应初始化所有这些字段，并移除显式静态构造函数。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToMD5Hash(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Cryptography" File="Crypto.cs" Line="86">在方法 'Crypto.ToMD5Hash(string)' 中，请在对 'md5' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CryptographyUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'CryptographyUtils' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateHashAlgoMd5()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Md" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Cryptography" File="CryptoHelper.cs" Line="115">更正成员名称 'CryptographyUtils.CreateHashAlgoMd5()' 中“Md”的大小写，将其改为“MD”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Decrypt(System.Security.Cryptography.SymmetricAlgorithm,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Cryptography" File="CryptoHelper.cs" Line="78">在方法 'CryptographyUtils.Decrypt(SymmetricAlgorithm, string, string)' 中，请在对 'hashMD5' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Cryptography" File="CryptoHelper.cs" Line="79">在外部可见方法 'CryptographyUtils.Decrypt(SymmetricAlgorithm, string, string)' 中，请在使用参数“algorithm”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Encrypt(System.Security.Cryptography.HashAlgorithm,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Cryptography" File="CryptoHelper.cs" Line="27">在外部可见方法 'CryptographyUtils.Encrypt(HashAlgorithm, string)' 中，请在使用参数“hashAlgorithm”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Encrypt(System.Security.Cryptography.SymmetricAlgorithm,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Cryptography" File="CryptoHelper.cs" Line="60">在方法 'CryptographyUtils.Encrypt(SymmetricAlgorithm, string, string)' 中，请在对 'hashMD5' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Cryptography" File="CryptoHelper.cs" Line="61">在外部可见方法 'CryptographyUtils.Encrypt(SymmetricAlgorithm, string, string)' 中，请在使用参数“algorithm”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CryptoHash" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_algorithm" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CryptoHash._algorithm' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_encryptionOptions" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CryptoHash._encryptionOptions' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CryptoSym" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_algorithm" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CryptoSym._algorithm' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_encryptionOptions" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CryptoSym._encryptionOptions' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Declaration">
       <Types>
        <Type Name="ChineseLunisolar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'ChineseLunisolar' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetLunisolarDay(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ChineseLunisolar.cs" Line="146">方法 'ChineseLunisolar.GetLunisolarDay(int)' 将“无效的日!”作为参数 'paramName' 传递给构造函数 'ArgumentOutOfRangeException'。请将此参数替换为该方法的某个参数名。请注意，所提供的参数名的大小写应与方法中声明的大小写完全一致。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLunisolarMonth(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ChineseLunisolar.cs" Line="107">方法 'ChineseLunisolar.GetLunisolarMonth(int)' 将“无效的月份!”作为参数 'paramName' 传递给构造函数 'ArgumentOutOfRangeException'。请将此参数替换为该方法的某个参数名。请注意，所提供的参数名的大小写应与方法中声明的大小写完全一致。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLunisolarYear(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ChineseLunisolar.cs" Line="80">方法 'ChineseLunisolar.GetLunisolarYear(int)' 将“无效的年份!”作为参数 'paramName' 传递给构造函数 'ArgumentOutOfRangeException'。请将此参数替换为该方法的某个参数名。请注意，所提供的参数名的大小写应与方法中声明的大小写完全一致。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CommomConst" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'CommomConst' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#COLON" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'CommomConst.COLON' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#COMMA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'CommomConst.COMMA' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DOT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'CommomConst.DOT' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EQUAL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'CommomConst.EQUAL' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PLUS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'CommomConst.PLUS' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SEMI" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'CommomConst.SEMI' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UNDERSCORE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'CommomConst.UNDERSCORE' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DiffResultFormat" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#dd" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dd" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'DiffResultFormat.dd' 中“dd”的大小写，将其改为“DD”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#mm" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="mm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'DiffResultFormat.mm' 中“mm”的大小写，将其改为“MM”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#yy" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="yy" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'DiffResultFormat.yy' 中“yy”的大小写，将其改为“YY”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#yymm" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="yymm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'DiffResultFormat.yymm' 中“yymm”的大小写，将其改为“Yymm”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GenericEqualityComparer`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetHashCode(!0)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="HasAllowedExceptions" Certainty="90" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="GenericEqualityComparer.cs" Line="57">'GenericEqualityComparer&lt;T&gt;.GetHashCode(T)' 创建 'NotImplementedException' 类型的异常，该异常类型不应当在这种类型的方法中引发。如果有可能会引发此异常实例，请使用其他异常类型，或者更改该方法的逻辑，使它不再引发异常。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NameId" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Equals(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="NameId.cs" Line="165">修改 'NameId.Equals(object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#From(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="NameId.cs" Line="138">修改 'NameId.From(object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="NameId.cs" Line="121">在成员 'NameId.From(object)' 中，考虑将参数名称 'obj' 中的数据类型标识符“obj”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="NameId.cs" Line="122">在外部可见方法 'NameId.From(object)' 中，请在使用参数“obj”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#From(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="NameId.cs" Line="106">修改 'NameId.From(string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="NameId.cs" Line="87">在方法 'NameId.From(string)' 中，考虑将参数名称 's' 改为一个更能体现其意义的名称。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NameValue" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Equals(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="NameValue.cs" Line="84">修改 'NameValue.Equals(object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectExtendMethod" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">更改成员名 'ToSQLDbType' 和“ToSqlDbType”，使它们的差别不仅仅在于大小写。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Between`1(!!0,!!0,!!0,System.Collections.Generic.IComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1913">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.Between&lt;T&gt;(this T, T, T, IComparer&lt;T&gt;)'。</Issue>
            </Message>
            <Message Id="Comparer" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1913">在成员 'ObjectExtendMethod.Between&lt;T&gt;(this T, T, T, IComparer&lt;T&gt;)' 中，更正参数名称 'Comparer' 中“Comparer”的大小写，将其改为“comparer”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1913">在成员 'ObjectExtendMethod.Between&lt;T&gt;(this T, T, T, IComparer&lt;T&gt;)' 中，更正参数名称 'Max' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1913">在成员 'ObjectExtendMethod.Between&lt;T&gt;(this T, T, T, IComparer&lt;T&gt;)' 中，更正参数名称 'Min' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1913">在成员 'ObjectExtendMethod.Between&lt;T&gt;(this T, T, T, IComparer&lt;T&gt;)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CallMethod`1(System.Object,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1141">'ObjectExtendMethod.CallMethod&lt;ReturnType&gt;(this object, string, params object[])' 创建类型为 'NullReferenceException' 的异常，该异常类型是运行时保留的，不应当由托管代码引发。如有可能会引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="Input" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1128">在成员 'ObjectExtendMethod.CallMethod&lt;ReturnType&gt;(this object, string, params object[])' 中，更正参数名称 'InputVariables' 中“Input”的大小写，将其改为“input”。</Issue>
            </Message>
            <Message Id="Method" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1128">在成员 'ObjectExtendMethod.CallMethod&lt;ReturnType&gt;(this object, string, params object[])' 中，更正参数名称 'MethodName' 中“Method”的大小写，将其改为“method”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1128">在成员 'ObjectExtendMethod.CallMethod&lt;ReturnType&gt;(this object, string, params object[])' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1128">在方法 'ObjectExtendMethod.CallMethod&lt;ReturnType&gt;(this object, string, params object[])' 上，将“T”作为泛型类型参数名称 'ReturnType' 的前缀。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1128">在成员 'ObjectExtendMethod.CallMethod&lt;ReturnType&gt;(this object, string, params object[])' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckIDCard(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="376">更正成员名称 'ObjectExtendMethod.CheckIDCard(this string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="Id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="376">在成员 'ObjectExtendMethod.CheckIDCard(this string)' 中，更正参数名称 'Id' 中“Id”的大小写，将其改为“id”。“id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="377">在外部可见方法 'ObjectExtendMethod.CheckIDCard(this string)' 中，请在使用参数“Id”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateInstance(System.Type,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1170">在成员 'ObjectExtendMethod.CreateInstance(this Type, params object[])' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateInstance`1(System.Type,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1157">在成员 'ObjectExtendMethod.CreateInstance&lt;ClassType&gt;(this Type, params object[])' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1157">在方法 'ObjectExtendMethod.CreateInstance&lt;ClassType&gt;(this Type, params object[])' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Deserialize(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="121">修改 'ObjectExtendMethod.Deserialize(this object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="116">在成员 'ObjectExtendMethod.Deserialize(this object)' 中，考虑将参数名称 'obj' 中的数据类型标识符“obj”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DumpProperties(System.Object,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1187">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.DumpProperties(this object, bool)'。</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1204">修改 'ObjectExtendMethod.DumpProperties(this object, bool)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="HTML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1187">在成员 'ObjectExtendMethod.DumpProperties(this object, bool)' 中，更正参数名称 'HTMLOutput' 中“HTML”的大小写，将其改为“html”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1187">在成员 'ObjectExtendMethod.DumpProperties(this object, bool)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1187">在成员 'ObjectExtendMethod.DumpProperties(this object, bool)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DumpProperties(System.Type,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1219">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.DumpProperties(this Type, bool)'。</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1234">修改 'ObjectExtendMethod.DumpProperties(this Type, bool)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="HTML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1219">在成员 'ObjectExtendMethod.DumpProperties(this Type, bool)' 中，更正参数名称 'HTMLOutput' 中“HTML”的大小写，将其改为“html”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1219">在成员 'ObjectExtendMethod.DumpProperties(this Type, bool)' 中，更正参数名称 'ObjectType' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Predicate`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="623">在成员 'ObjectExtendMethod.Exists&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="Match" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="623">在成员 'ObjectExtendMethod.Exists&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)' 中，更正参数名称 'Match' 中“Match”的大小写，将其改为“match”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="627">在外部可见方法 'ObjectExtendMethod.Exists&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)' 中，请在使用参数“List”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="629">在外部可见方法 'ObjectExtendMethod.Exists&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)' 中，请在使用参数“Match”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#For`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Int32,System.Int32,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Action" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="649">在成员 'ObjectExtendMethod.For&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，更正参数名称 'Action' 中“Action”的大小写，将其改为“action”。</Issue>
            </Message>
            <Message Id="End" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="649">在成员 'ObjectExtendMethod.For&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，更正参数名称 'End' 中“End”的大小写，将其改为“end”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="649">在成员 'ObjectExtendMethod.For&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="Start" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="649">在成员 'ObjectExtendMethod.For&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，更正参数名称 'Start' 中“Start”的大小写，将其改为“start”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="653">在外部可见方法 'ObjectExtendMethod.For&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，请在使用参数“List”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="656">在外部可见方法 'ObjectExtendMethod.For&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，请在使用参数“Action”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#For`2(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Int32,System.Int32,System.Func`2&lt;!!0,!!1&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="End" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="675">在成员 'ObjectExtendMethod.For&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，更正参数名称 'End' 中“End”的大小写，将其改为“end”。</Issue>
            </Message>
            <Message Id="Function" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="675">在成员 'ObjectExtendMethod.For&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，更正参数名称 'Function' 中“Function”的大小写，将其改为“function”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="675">在成员 'ObjectExtendMethod.For&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="Start" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="675">在成员 'ObjectExtendMethod.For&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，更正参数名称 'Start' 中“Start”的大小写，将其改为“start”。</Issue>
            </Message>
            <Message Id="R" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="675">在方法 'ObjectExtendMethod.For&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，考虑将泛型类型参数名称 'R' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="675">在方法 'ObjectExtendMethod.For&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 上，将“T”作为泛型类型参数名称 'R' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="680">在外部可见方法 'ObjectExtendMethod.For&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，请在使用参数“List”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="683">在外部可见方法 'ObjectExtendMethod.For&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，请在使用参数“Function”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEach`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Action" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="703">在成员 'ObjectExtendMethod.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'Action' 中“Action”的大小写，将其改为“action”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="703">在成员 'ObjectExtendMethod.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="706">在外部可见方法 'ObjectExtendMethod.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;)' 中，请在使用参数“List”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="707">在外部可见方法 'ObjectExtendMethod.ForEach&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;)' 中，请在使用参数“Action”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEach`2(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,!!1&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Function" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="720">在成员 'ObjectExtendMethod.ForEach&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 中，更正参数名称 'Function' 中“Function”的大小写，将其改为“function”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="720">在成员 'ObjectExtendMethod.ForEach&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="R" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="720">在方法 'ObjectExtendMethod.ForEach&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 中，考虑将泛型类型参数名称 'R' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="720">在方法 'ObjectExtendMethod.ForEach&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 上，将“T”作为泛型类型参数名称 'R' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="724">在外部可见方法 'ObjectExtendMethod.ForEach&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 中，请在使用参数“List”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="725">在外部可见方法 'ObjectExtendMethod.ForEach&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 中，请在使用参数“Function”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEachParallel`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Action" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="781">在成员 'ObjectExtendMethod.ForEachParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'Action' 中“Action”的大小写，将其改为“action”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="781">在成员 'ObjectExtendMethod.ForEachParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForEachParallel`2(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,!!1&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Function" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="797">在成员 'ObjectExtendMethod.ForEachParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 中，更正参数名称 'Function' 中“Function”的大小写，将其改为“function”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="797">在成员 'ObjectExtendMethod.ForEachParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="R" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="797">在方法 'ObjectExtendMethod.ForEachParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 中，考虑将泛型类型参数名称 'R' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="797">在方法 'ObjectExtendMethod.ForEachParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, R&gt;)' 上，将“T”作为泛型类型参数名称 'R' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatToString(System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="232">在成员 'ObjectExtendMethod.FormatToString(this object, string)' 中，更正参数名称 'Format' 中“Format”的大小写，将其改为“format”。</Issue>
            </Message>
            <Message Id="Input" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="232">在成员 'ObjectExtendMethod.FormatToString(this object, string)' 中，更正参数名称 'Input' 中“Input”的大小写，将其改为“input”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="235">在外部可见方法 'ObjectExtendMethod.FormatToString(this object, string)' 中，请在使用参数“Input”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForParallel`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Int32,System.Int32,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Action" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="743">在成员 'ObjectExtendMethod.ForParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，更正参数名称 'Action' 中“Action”的大小写，将其改为“action”。</Issue>
            </Message>
            <Message Id="End" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="743">在成员 'ObjectExtendMethod.ForParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，更正参数名称 'End' 中“End”的大小写，将其改为“end”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="743">在成员 'ObjectExtendMethod.ForParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="Start" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="743">在成员 'ObjectExtendMethod.ForParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, int, int, Action&lt;T&gt;)' 中，更正参数名称 'Start' 中“Start”的大小写，将其改为“start”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForParallel`2(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Int32,System.Int32,System.Func`2&lt;!!0,!!1&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="End" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="761">在成员 'ObjectExtendMethod.ForParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，更正参数名称 'End' 中“End”的大小写，将其改为“end”。</Issue>
            </Message>
            <Message Id="Function" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="761">在成员 'ObjectExtendMethod.ForParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，更正参数名称 'Function' 中“Function”的大小写，将其改为“function”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="761">在成员 'ObjectExtendMethod.ForParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="Start" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="761">在成员 'ObjectExtendMethod.ForParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，更正参数名称 'Start' 中“Start”的大小写，将其改为“start”。</Issue>
            </Message>
            <Message Id="R" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="761">在方法 'ObjectExtendMethod.ForParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 中，考虑将泛型类型参数名称 'R' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="761">在方法 'ObjectExtendMethod.ForParallel&lt;T, R&gt;(this IEnumerable&lt;T&gt;, int, int, Func&lt;T, R&gt;)' 上，将“T”作为泛型类型参数名称 'R' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAttribute`1(System.Reflection.ICustomAttributeProvider,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1254">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.GetAttribute&lt;T&gt;(this ICustomAttributeProvider, bool)'。</Issue>
            </Message>
            <Message Id="Inherit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1254">在成员 'ObjectExtendMethod.GetAttribute&lt;T&gt;(this ICustomAttributeProvider, bool)' 中，更正参数名称 'Inherit' 中“Inherit”的大小写，将其改为“inherit”。</Issue>
            </Message>
            <Message Id="Provider" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1254">在成员 'ObjectExtendMethod.GetAttribute&lt;T&gt;(this ICustomAttributeProvider, bool)' 中，更正参数名称 'Provider' 中“Provider”的大小写，将其改为“provider”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1255">在外部可见方法 'ObjectExtendMethod.GetAttribute&lt;T&gt;(this ICustomAttributeProvider, bool)' 中，请在使用参数“Provider”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAttributes`1(System.Reflection.ICustomAttributeProvider,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1270">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.GetAttributes&lt;T&gt;(this ICustomAttributeProvider, bool)'。</Issue>
            </Message>
            <Message Id="Inherit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1270">在成员 'ObjectExtendMethod.GetAttributes&lt;T&gt;(this ICustomAttributeProvider, bool)' 中，更正参数名称 'Inherit' 中“Inherit”的大小写，将其改为“inherit”。</Issue>
            </Message>
            <Message Id="Provider" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1270">在成员 'ObjectExtendMethod.GetAttributes&lt;T&gt;(this ICustomAttributeProvider, bool)' 中，更正参数名称 'Provider' 中“Provider”的大小写，将其改为“provider”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1271">在外部可见方法 'ObjectExtendMethod.GetAttributes&lt;T&gt;(this ICustomAttributeProvider, bool)' 中，请在使用参数“Provider”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetName(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1285">在成员 'ObjectExtendMethod.GetName(this Type)' 中，更正参数名称 'ObjectType' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNumberInt(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="487">考虑将成员名称 'ObjectExtendMethod.GetNumberInt(this string)' 中特定于语言的数据类型标识符“Int”替换为不依赖于语言的等效词条或者更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjects`1(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Assemblies" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1345">在成员 'ObjectExtendMethod.GetObjects&lt;ClassType&gt;(this IEnumerable&lt;Assembly&gt;)' 中，更正参数名称 'Assemblies' 中“Assemblies”的大小写，将其改为“assemblies”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1345">在方法 'ObjectExtendMethod.GetObjects&lt;ClassType&gt;(this IEnumerable&lt;Assembly&gt;)' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjects`1(System.IO.DirectoryInfo,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1362">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.GetObjects&lt;ClassType&gt;(this DirectoryInfo, bool)'。</Issue>
            </Message>
            <Message Id="Directory" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1362">在成员 'ObjectExtendMethod.GetObjects&lt;ClassType&gt;(this DirectoryInfo, bool)' 中，更正参数名称 'Directory' 中“Directory”的大小写，将其改为“directory”。</Issue>
            </Message>
            <Message Id="Recursive" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1362">在成员 'ObjectExtendMethod.GetObjects&lt;ClassType&gt;(this DirectoryInfo, bool)' 中，更正参数名称 'Recursive' 中“Recursive”的大小写，将其改为“recursive”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1362">在方法 'ObjectExtendMethod.GetObjects&lt;ClassType&gt;(this DirectoryInfo, bool)' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObjects`1(System.Reflection.Assembly)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Assembly" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1328">在成员 'ObjectExtendMethod.GetObjects&lt;ClassType&gt;(this Assembly)' 中，更正参数名称 'Assembly' 中“Assembly”的大小写，将其改为“assembly”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1328">在方法 'ObjectExtendMethod.GetObjects&lt;ClassType&gt;(this Assembly)' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetProperty(System.Object,System.Reflection.PropertyInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1379">在成员 'ObjectExtendMethod.GetProperty(this object, PropertyInfo)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1379">在成员 'ObjectExtendMethod.GetProperty(this object, PropertyInfo)' 中，更正参数名称 'Property' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1379">在成员 'ObjectExtendMethod.GetProperty(this object, PropertyInfo)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetProperty(System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1394">在成员 'ObjectExtendMethod.GetProperty(this object, string)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1394">在成员 'ObjectExtendMethod.GetProperty(this object, string)' 中，更正参数名称 'Property' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1394">在成员 'ObjectExtendMethod.GetProperty(this object, string)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyGetter`1(System.Reflection.PropertyInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1449">考虑 'ObjectExtendMethod.GetPropertyGetter&lt;ClassType&gt;(this PropertyInfo)' 不嵌套泛型类型 'Expression&lt;Func&lt;ClassType, object&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1449">在成员 'ObjectExtendMethod.GetPropertyGetter&lt;ClassType&gt;(this PropertyInfo)' 中，更正参数名称 'Property' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1449">在方法 'ObjectExtendMethod.GetPropertyGetter&lt;ClassType&gt;(this PropertyInfo)' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyGetter`2(System.Reflection.PropertyInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1427">考虑 'ObjectExtendMethod.GetPropertyGetter&lt;ClassType, DataType&gt;(this PropertyInfo)' 不嵌套泛型类型 'Expression&lt;Func&lt;ClassType, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1427">在成员 'ObjectExtendMethod.GetPropertyGetter&lt;ClassType, DataType&gt;(this PropertyInfo)' 中，更正参数名称 'Property' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1427">在方法 'ObjectExtendMethod.GetPropertyGetter&lt;ClassType, DataType&gt;(this PropertyInfo)' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1427">在方法 'ObjectExtendMethod.GetPropertyGetter&lt;ClassType, DataType&gt;(this PropertyInfo)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1428">在外部可见方法 'ObjectExtendMethod.GetPropertyGetter&lt;ClassType, DataType&gt;(this PropertyInfo)' 中，请在使用参数“Property”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyName(System.Linq.Expressions.Expression)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Expression" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1482">在成员 'ObjectExtendMethod.GetPropertyName(this Expression)' 中，更正参数名称 'Expression' 中“Expression”的大小写，将其改为“expression”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyName`2(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1465">考虑将 'ObjectExtendMethod.GetPropertyName&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 中参数 'Expression' 的类型从 'Expression&lt;Func&lt;ClassType, DataType&gt;&gt;' 改为其基类型 'LambdaExpression'。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1465">考虑 'ObjectExtendMethod.GetPropertyName&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 不嵌套泛型类型 'Expression&lt;Func&lt;ClassType, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Expression" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1465">在成员 'ObjectExtendMethod.GetPropertyName&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 中，更正参数名称 'Expression' 中“Expression”的大小写，将其改为“expression”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1465">在方法 'ObjectExtendMethod.GetPropertyName&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1465">在方法 'ObjectExtendMethod.GetPropertyName&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1466">在外部可见方法 'ObjectExtendMethod.GetPropertyName&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 中，请在使用参数“Expression”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertySetter`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Object&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1584">考虑 'ObjectExtendMethod.GetPropertySetter&lt;ClassType&gt;(this Expression&lt;Func&lt;ClassType, object&gt;&gt;)' 不嵌套泛型类型 'Expression&lt;Action&lt;ClassType, object&gt;&gt;' 的设计。</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1584">考虑 'ObjectExtendMethod.GetPropertySetter&lt;ClassType&gt;(this Expression&lt;Func&lt;ClassType, object&gt;&gt;)' 不嵌套泛型类型 'Expression&lt;Func&lt;ClassType, object&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1584">在成员 'ObjectExtendMethod.GetPropertySetter&lt;ClassType&gt;(this Expression&lt;Func&lt;ClassType, object&gt;&gt;)' 中，更正参数名称 'Property' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1584">在方法 'ObjectExtendMethod.GetPropertySetter&lt;ClassType&gt;(this Expression&lt;Func&lt;ClassType, object&gt;&gt;)' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertySetter`2(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1541">考虑 'ObjectExtendMethod.GetPropertySetter&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 不嵌套泛型类型 'Expression&lt;Action&lt;ClassType, DataType&gt;&gt;' 的设计。</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1541">考虑 'ObjectExtendMethod.GetPropertySetter&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 不嵌套泛型类型 'Expression&lt;Func&lt;ClassType, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1541">在成员 'ObjectExtendMethod.GetPropertySetter&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 中，更正参数名称 'Property' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1541">在方法 'ObjectExtendMethod.GetPropertySetter&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 上，将“T”作为泛型类型参数名称 'ClassType' 的前缀。</Issue>
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1541">在方法 'ObjectExtendMethod.GetPropertySetter&lt;ClassType, DataType&gt;(this Expression&lt;Func&lt;ClassType, DataType&gt;&gt;)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyType(System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1501">在成员 'ObjectExtendMethod.GetPropertyType(this object, string)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1501">在成员 'ObjectExtendMethod.GetPropertyType(this object, string)' 中，更正参数名称 'PropertyPath' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1501">在成员 'ObjectExtendMethod.GetPropertyType(this object, string)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyType(System.Type,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1516">在成员 'ObjectExtendMethod.GetPropertyType(this Type, string)' 中，更正参数名称 'ObjectType' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1516">在成员 'ObjectExtendMethod.GetPropertyType(this Type, string)' 中，更正参数名称 'PropertyPath' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypes(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;,System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Assemblies" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1640">在成员 'ObjectExtendMethod.GetTypes(this IEnumerable&lt;Assembly&gt;, Type)' 中，更正参数名称 'Assemblies' 中“Assemblies”的大小写，将其改为“assemblies”。</Issue>
            </Message>
            <Message Id="Base" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1640">在成员 'ObjectExtendMethod.GetTypes(this IEnumerable&lt;Assembly&gt;, Type)' 中，更正参数名称 'BaseType' 中“Base”的大小写，将其改为“base”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypes(System.Reflection.Assembly,System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Assembly" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1612">在成员 'ObjectExtendMethod.GetTypes(this Assembly, Type)' 中，更正参数名称 'Assembly' 中“Assembly”的大小写，将其改为“assembly”。</Issue>
            </Message>
            <Message Id="Base" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1612">在成员 'ObjectExtendMethod.GetTypes(this Assembly, Type)' 中，更正参数名称 'BaseType' 中“Base”的大小写，将其改为“base”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypes`1(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1627">考虑使用 'ObjectExtendMethod.GetTypes&lt;BaseType&gt;(this IEnumerable&lt;Assembly&gt;)' 在任何对它的调用中都不需要显式类型参数 'BaseType' 的设计。</Issue>
            </Message>
            <Message Id="Assemblies" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1627">在成员 'ObjectExtendMethod.GetTypes&lt;BaseType&gt;(this IEnumerable&lt;Assembly&gt;)' 中，更正参数名称 'Assemblies' 中“Assemblies”的大小写，将其改为“assemblies”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1627">在方法 'ObjectExtendMethod.GetTypes&lt;BaseType&gt;(this IEnumerable&lt;Assembly&gt;)' 上，将“T”作为泛型类型参数名称 'BaseType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypes`1(System.Reflection.Assembly)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1599">考虑使用 'ObjectExtendMethod.GetTypes&lt;BaseType&gt;(this Assembly)' 在任何对它的调用中都不需要显式类型参数 'BaseType' 的设计。</Issue>
            </Message>
            <Message Id="Assembly" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1599">在成员 'ObjectExtendMethod.GetTypes&lt;BaseType&gt;(this Assembly)' 中，更正参数名称 'Assembly' 中“Assembly”的大小写，将其改为“assembly”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1599">在方法 'ObjectExtendMethod.GetTypes&lt;BaseType&gt;(this Assembly)' 上，将“T”作为泛型类型参数名称 'BaseType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HtmlDecode(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="407">在外部可见方法 'ObjectExtendMethod.HtmlDecode(this string)' 中，请在使用参数“str”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HtmlEncode(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="391">在外部可见方法 'ObjectExtendMethod.HtmlEncode(this string)' 中，请在使用参数“str”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsDateTime(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="363">修改 'ObjectExtendMethod.IsDateTime(this string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsDefault`1(!!0,System.Collections.Generic.IEqualityComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1968">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.IsDefault&lt;T&gt;(this T, IEqualityComparer&lt;T&gt;)'。</Issue>
            </Message>
            <Message Id="Equality" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1968">在成员 'ObjectExtendMethod.IsDefault&lt;T&gt;(this T, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'EqualityComparer' 中“Equality”的大小写，将其改为“equality”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1968">在成员 'ObjectExtendMethod.IsDefault&lt;T&gt;(this T, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEmail(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="273">在方法 'ObjectExtendMethod.IsEmail(this string)' 中，考虑将参数名称 's' 改为一个更能体现其意义的名称。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEmpty(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="250">在方法 'ObjectExtendMethod.IsEmpty(this string)' 中，考虑将参数名称 's' 改为一个更能体现其意义的名称。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsIEnumerable(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1660">在成员 'ObjectExtendMethod.IsIEnumerable(this Type)' 中，更正参数名称 'ObjectType' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsInt(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="261">在方法 'ObjectExtendMethod.IsInt(this string)' 中，考虑将参数名称 's' 改为一个更能体现其意义的名称。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNotDefault`1(!!0,System.Collections.Generic.IEqualityComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1952">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.IsNotDefault&lt;T&gt;(this T, IEqualityComparer&lt;T&gt;)'。</Issue>
            </Message>
            <Message Id="Equality" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1952">在成员 'ObjectExtendMethod.IsNotDefault&lt;T&gt;(this T, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'EqualityComparer' 中“Equality”的大小写，将其改为“equality”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1952">在成员 'ObjectExtendMethod.IsNotDefault&lt;T&gt;(this T, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNotNull(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="159">在成员 'ObjectExtendMethod.IsNotNull(this object)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="159">在成员 'ObjectExtendMethod.IsNotNull(this object)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNotNullOrDBNull(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="173">在成员 'ObjectExtendMethod.IsNotNullOrDBNull(this object)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="173">在成员 'ObjectExtendMethod.IsNotNullOrDBNull(this object)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNull(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="145">在成员 'ObjectExtendMethod.IsNull(this object)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="145">在成员 'ObjectExtendMethod.IsNull(this object)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNullOrDBNull(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="187">在成员 'ObjectExtendMethod.IsNullOrDBNull(this object)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="187">在成员 'ObjectExtendMethod.IsNullOrDBNull(this object)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNullOrEmpty`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="814">在成员 'ObjectExtendMethod.IsNullOrEmpty&lt;T&gt;(this IEnumerable&lt;T&gt;)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsOfType(System.Object,System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1675">在成员 'ObjectExtendMethod.IsOfType(this object, Type)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1675">在成员 'ObjectExtendMethod.IsOfType(this object, Type)' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1675">在成员 'ObjectExtendMethod.IsOfType(this object, Type)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsOfType(System.Type,System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1690">在成员 'ObjectExtendMethod.IsOfType(this Type, Type)' 中，更正参数名称 'ObjectType' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1690">在成员 'ObjectExtendMethod.IsOfType(this Type, Type)' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidateEmail(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="310">在外部可见方法 'ObjectExtendMethod.IsValidateEmail(this string)' 中，请在使用参数“str”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidateIP(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="297">在外部可见方法 'ObjectExtendMethod.IsValidateIP(this string)' 中，请在使用参数“str”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidateUrl(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="323">在外部可见方法 'ObjectExtendMethod.IsValidateUrl(this string)' 中，请在使用参数“str”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Load(System.Reflection.AssemblyName)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1712">在成员 'ObjectExtendMethod.Load(this AssemblyName)' 中，更正参数名称 'Name' 中“Name”的大小写，将其改为“name”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadAssemblies(System.IO.DirectoryInfo,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.LoadAssemblies(this DirectoryInfo, bool)'。</Issue>
            </Message>
            <Message Id="Directory" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'ObjectExtendMethod.LoadAssemblies(this DirectoryInfo, bool)' 中，更正参数名称 'Directory' 中“Directory”的大小写，将其改为“directory”。</Issue>
            </Message>
            <Message Id="Recursive" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'ObjectExtendMethod.LoadAssemblies(this DirectoryInfo, bool)' 中，更正参数名称 'Recursive' 中“Recursive”的大小写，将其改为“recursive”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MakeShallowCopy`1(!!0,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1762">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.MakeShallowCopy&lt;T&gt;(this T, bool)'。</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1781">修改 'ObjectExtendMethod.MakeShallowCopy&lt;T&gt;(this T, bool)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1793">修改 'ObjectExtendMethod.MakeShallowCopy&lt;T&gt;(this T, bool)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1762">在成员 'ObjectExtendMethod.MakeShallowCopy&lt;T&gt;(this T, bool)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Simple" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1762">在成员 'ObjectExtendMethod.MakeShallowCopy&lt;T&gt;(this T, bool)' 中，更正参数名称 'SimpleTypesOnly' 中“Simple”的大小写，将其改为“simple”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MarkedWith`1(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1745">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.MarkedWith&lt;T&gt;(this IEnumerable&lt;Type&gt;, bool)'。</Issue>
            </Message>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1745">考虑使用 'ObjectExtendMethod.MarkedWith&lt;T&gt;(this IEnumerable&lt;Type&gt;, bool)' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
            <Message Id="Inherit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1745">在成员 'ObjectExtendMethod.MarkedWith&lt;T&gt;(this IEnumerable&lt;Type&gt;, bool)' 中，更正参数名称 'Inherit' 中“Inherit”的大小写，将其改为“inherit”。</Issue>
            </Message>
            <Message Id="Types" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1745">在成员 'ObjectExtendMethod.MarkedWith&lt;T&gt;(this IEnumerable&lt;Type&gt;, bool)' 中，更正参数名称 'Types' 中“Types”的大小写，将其改为“types”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NullCheck`1(!!0,!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1936">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.NullCheck&lt;T&gt;(this T, T)'。</Issue>
            </Message>
            <Message Id="Default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1936">在成员 'ObjectExtendMethod.NullCheck&lt;T&gt;(this T, T)' 中，更正参数名称 'DefaultValue' 中“Default”的大小写，将其改为“default”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1936">在成员 'ObjectExtendMethod.NullCheck&lt;T&gt;(this T, T)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveDefaults`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Collections.Generic.IEqualityComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.RemoveDefaults&lt;T&gt;(this IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)'。</Issue>
            </Message>
            <Message Id="Equality" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'ObjectExtendMethod.RemoveDefaults&lt;T&gt;(this IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'EqualityComparer' 中“Equality”的大小写，将其改为“equality”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'ObjectExtendMethod.RemoveDefaults&lt;T&gt;(this IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Serialize(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="133">在成员 'ObjectExtendMethod.Serialize(this object)' 中，考虑将参数名称 'obj' 中的数据类型标识符“obj”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetProperty(System.Object,System.Reflection.PropertyInfo,System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1811">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.SetProperty(this object, PropertyInfo, object, string)'。</Issue>
            </Message>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1811">在成员 'ObjectExtendMethod.SetProperty(this object, PropertyInfo, object, string)' 中，更正参数名称 'Format' 中“Format”的大小写，将其改为“format”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1811">在成员 'ObjectExtendMethod.SetProperty(this object, PropertyInfo, object, string)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1811">在成员 'ObjectExtendMethod.SetProperty(this object, PropertyInfo, object, string)' 中，更正参数名称 'Property' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1811">在成员 'ObjectExtendMethod.SetProperty(this object, PropertyInfo, object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1811">在成员 'ObjectExtendMethod.SetProperty(this object, PropertyInfo, object, string)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetProperty(System.Object,System.String,System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1834">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.SetProperty(this object, string, object, string)'。</Issue>
            </Message>
            <Message Id="Format" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1834">在成员 'ObjectExtendMethod.SetProperty(this object, string, object, string)' 中，更正参数名称 'Format' 中“Format”的大小写，将其改为“format”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1834">在成员 'ObjectExtendMethod.SetProperty(this object, string, object, string)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Property" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1834">在成员 'ObjectExtendMethod.SetProperty(this object, string, object, string)' 中，更正参数名称 'Property' 中“Property”的大小写，将其改为“property”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1834">在成员 'ObjectExtendMethod.SetProperty(this object, string, object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1834">在成员 'ObjectExtendMethod.SetProperty(this object, string, object, string)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SqlTextClear(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="426">使用“String.IsNullOrEmpty”调用来替换 'ObjectExtendMethod.SqlTextClear(this string)' 中的 'string.operator ==(string, string)' 调用。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThrowIfDefault`1(!!0,System.String,System.Collections.Generic.IEqualityComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1983">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.ThrowIfDefault&lt;T&gt;(this T, string, IEqualityComparer&lt;T&gt;)'。</Issue>
            </Message>
            <Message Id="Equality" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1983">在成员 'ObjectExtendMethod.ThrowIfDefault&lt;T&gt;(this T, string, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'EqualityComparer' 中“Equality”的大小写，将其改为“equality”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1983">在成员 'ObjectExtendMethod.ThrowIfDefault&lt;T&gt;(this T, string, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'Item' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1983">在成员 'ObjectExtendMethod.ThrowIfDefault&lt;T&gt;(this T, string, IEqualityComparer&lt;T&gt;)' 中，更正参数名称 'Name' 中“Name”的大小写，将其改为“name”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThrowIfNull(System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="216">在成员 'ObjectExtendMethod.ThrowIfNull(this object, string)' 中，更正参数名称 'Item' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="216">在成员 'ObjectExtendMethod.ThrowIfNull(this object, string)' 中，更正参数名称 'Name' 中“Name”的大小写，将其改为“name”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThrowIfNullOrDBNull(System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="201">在成员 'ObjectExtendMethod.ThrowIfNullOrDBNull(this object, string)' 中，更正参数名称 'Item' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="201">在成员 'ObjectExtendMethod.ThrowIfNullOrDBNull(this object, string)' 中，更正参数名称 'Name' 中“Name”的大小写，将其改为“name”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThrowIfNullOrEmpty`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="604">在成员 'ObjectExtendMethod.ThrowIfNullOrEmpty&lt;T&gt;(this IEnumerable&lt;T&gt;, string)' 中，更正参数名称 'Item' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="604">在成员 'ObjectExtendMethod.ThrowIfNullOrEmpty&lt;T&gt;(this IEnumerable&lt;T&gt;, string)' 中，更正参数名称 'Name' 中“Name”的大小写，将其改为“name”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToArray`2(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,!!1&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Converting" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="851">在成员 'ObjectExtendMethod.ToArray&lt;Source, Target&gt;(this IEnumerable&lt;Source&gt;, Func&lt;Source, Target&gt;)' 中，更正参数名称 'ConvertingFunction' 中“Converting”的大小写，将其改为“converting”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="851">在成员 'ObjectExtendMethod.ToArray&lt;Source, Target&gt;(this IEnumerable&lt;Source&gt;, Func&lt;Source, Target&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="851">在方法 'ObjectExtendMethod.ToArray&lt;Source, Target&gt;(this IEnumerable&lt;Source&gt;, Func&lt;Source, Target&gt;)' 上，将“T”作为泛型类型参数名称 'Source' 的前缀。</Issue>
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="851">在方法 'ObjectExtendMethod.ToArray&lt;Source, Target&gt;(this IEnumerable&lt;Source&gt;, Func&lt;Source, Target&gt;)' 上，将“T”作为泛型类型参数名称 'Target' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToBoolean(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="69">修改 'ObjectExtendMethod.ToBoolean(this object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="64">在成员 'ObjectExtendMethod.ToBoolean(this object)' 中，考虑将参数名称 'obj' 中的数据类型标识符“obj”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToChineseDateTime(System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="995">修改 'ObjectExtendMethod.ToChineseDateTime(this DateTime)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToColumnString`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="558">修改 'ObjectExtendMethod.ToColumnString&lt;TSource&gt;(this IEnumerable&lt;TSource&gt;)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="545">在外部可见方法 'ObjectExtendMethod.ToColumnString&lt;TSource&gt;(this IEnumerable&lt;TSource&gt;)' 中，请在使用参数“sources”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToCultureDayOfWeek(System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="978">修改 'ObjectExtendMethod.ToCultureDayOfWeek(this DateTime)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDataTable`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="583">在外部可见方法 'ObjectExtendMethod.ToDataTable&lt;TResult&gt;(this IEnumerable&lt;TResult&gt;)' 中，请在使用参数“value”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDateTime(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="51">修改 'ObjectExtendMethod.ToDateTime(this object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="46">在成员 'ObjectExtendMethod.ToDateTime(this object)' 中，考虑将参数名称 'obj' 中的数据类型标识符“obj”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDbType(System.Data.SqlDbType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2072">更正成员名称 'ObjectExtendMethod.ToDbType(this SqlDbType)' 中“Db”的大小写，将其改为“DB”。</Issue>
            </Message>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2072">在成员 'ObjectExtendMethod.ToDbType(this SqlDbType)' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDbType(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2028">'ObjectExtendMethod.ToDbType(this Type)' 的圈复杂度为 35。重写或重构该方法，以便将复杂度降低到 25。</Issue>
            </Message>
            <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2028">更正成员名称 'ObjectExtendMethod.ToDbType(this Type)' 中“Db”的大小写，将其改为“DB”。</Issue>
            </Message>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2028">在成员 'ObjectExtendMethod.ToDbType(this Type)' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDecimal(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="86">修改 'ObjectExtendMethod.ToDecimal(this object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="81">在成员 'ObjectExtendMethod.ToDecimal(this object)' 中，考虑将参数名称 'obj' 中的数据类型标识符“obj”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDouble(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="103">修改 'ObjectExtendMethod.ToDouble(this object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="98">在成员 'ObjectExtendMethod.ToDouble(this object)' 中，考虑将参数名称 'obj' 中的数据类型标识符“obj”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToInt32(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="34">修改 'ObjectExtendMethod.ToInt32(this object)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="29">在成员 'ObjectExtendMethod.ToInt32(this object)' 中，考虑将参数名称 'obj' 中的数据类型标识符“obj”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToLongVersionString(System.Reflection.Assembly)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Assembly" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1868">在成员 'ObjectExtendMethod.ToLongVersionString(this Assembly)' 中，更正参数名称 'Assembly' 中“Assembly”的大小写，将其改为“assembly”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToShortVersionString(System.Reflection.Assembly)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Assembly" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="1884">在成员 'ObjectExtendMethod.ToShortVersionString(this Assembly)' 中，更正参数名称 'Assembly' 中“Assembly”的大小写，将其改为“assembly”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToSqlDbType(System.Data.DbType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2012">更正成员名称 'ObjectExtendMethod.ToSqlDbType(this DbType)' 中“Db”的大小写，将其改为“DB”。</Issue>
            </Message>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2012">在成员 'ObjectExtendMethod.ToSqlDbType(this DbType)' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToSQLDbType(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2002">更正成员名称 'ObjectExtendMethod.ToSQLDbType(this Type)' 中“Db”的大小写，将其改为“DB”。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2002">更正成员名称 'ObjectExtendMethod.ToSQLDbType(this Type)' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2002">在成员 'ObjectExtendMethod.ToSQLDbType(this Type)' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToSqlInContent`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="527">修改 'ObjectExtendMethod.ToSqlInContent&lt;TSource&gt;(this IEnumerable&lt;TSource&gt;)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="515">在外部可见方法 'ObjectExtendMethod.ToSqlInContent&lt;TSource&gt;(this IEnumerable&lt;TSource&gt;)' 中，请在使用参数“source”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Func`2&lt;!!0,System.String&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="870">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.ToString&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, string&gt;, string)'。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="870">在成员 'ObjectExtendMethod.ToString&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, string&gt;, string)' 中，更正参数名称 'ItemOutput' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="870">在成员 'ObjectExtendMethod.ToString&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, string&gt;, string)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="Seperator" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="870">在成员 'ObjectExtendMethod.ToString&lt;T&gt;(this IEnumerable&lt;T&gt;, Func&lt;T, string&gt;, string)' 中，更正参数名称 'Seperator' 中“Seperator”的大小写，将其改为“seperator”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToType(System.Data.DbType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2098">在成员 'ObjectExtendMethod.ToType(this DbType)' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToType(System.Data.SqlDbType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="2088">在成员 'ObjectExtendMethod.ToType(this SqlDbType)' 中，更正参数名称 'Type' 中“Type”的大小写，将其改为“type”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrueForAll`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Predicate`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="896">在成员 'ObjectExtendMethod.TrueForAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="Predicate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="896">在成员 'ObjectExtendMethod.TrueForAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Predicate&lt;T&gt;)' 中，更正参数名称 'Predicate' 中“Predicate”的大小写，将其改为“predicate”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryAll`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Action`1&lt;!!0&gt;,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="916">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.TryAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)'。</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="925">修改 'ObjectExtendMethod.TryAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="Action" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="916">在成员 'ObjectExtendMethod.TryAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'Action' 中“Action”的大小写，将其改为“action”。</Issue>
            </Message>
            <Message Id="Catch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="916">在成员 'ObjectExtendMethod.TryAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'CatchAction' 中“Catch”的大小写，将其改为“catch”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="916">在成员 'ObjectExtendMethod.TryAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="919">在外部可见方法 'ObjectExtendMethod.TryAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 中，请在使用参数“List”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="923">在外部可见方法 'ObjectExtendMethod.TryAll&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 中，请在使用参数“Action”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryAllParallel`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Action`1&lt;!!0&gt;,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="945">用提供所有默认形参的重载来替换方法 'ObjectExtendMethod.TryAllParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)'。</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="954">修改 'ObjectExtendMethod.TryAllParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="Action" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="945">在成员 'ObjectExtendMethod.TryAllParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'Action' 中“Action”的大小写，将其改为“action”。</Issue>
            </Message>
            <Message Id="Catch" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="945">在成员 'ObjectExtendMethod.TryAllParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'CatchAction' 中“Catch”的大小写，将其改为“catch”。</Issue>
            </Message>
            <Message Id="List" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Declaration" File="ObjectExtendMethod.cs" Line="945">在成员 'ObjectExtendMethod.TryAllParallel&lt;T&gt;(this IEnumerable&lt;T&gt;, Action&lt;T&gt;, Action&lt;T&gt;)' 中，更正参数名称 'List' 中“List”的大小写，将其改为“list”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PageParam" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'PageParam.Count' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Index" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'PageParam.Index' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderBy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'PageParam.OrderBy' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'PageParam.OrderType' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Size" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'PageParam.Size' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Total" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'PageParam.Total' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThumbnailMod" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="NotInt32" Certainty="60" Level="Warning">如有可能，请将 'ThumbnailMod' 的基础类型设为 System.Int32，而不是 'byte'。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#H" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="H" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">考虑将成员名称 'ThumbnailMod.H' 改为一个更能体现其意义的名称。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#W" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="W" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">考虑将成员名称 'ThumbnailMod.W' 改为一个更能体现其意义的名称。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.IoC">
       <Types>
        <Type Name="IInstanceLocator" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsTypeRegistered`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'IInstanceLocator.IsTypeRegistered&lt;T&gt;()' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterType`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">考虑使用 'IInstanceLocator.RegisterType&lt;T&gt;()' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InstanceLocator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsTypeRegistered`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\IoC" File="InstanceLocator.cs" Line="50">考虑使用 'InstanceLocator.IsTypeRegistered&lt;T&gt;()' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterType`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\IoC" File="InstanceLocator.cs" Line="40">考虑使用 'InstanceLocator.RegisterType&lt;T&gt;()' 在任何对它的调用中都不需要显式类型参数 'T' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.License">
       <Types>
        <Type Name="LicenseKey" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'LicenseKey' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#cpuId()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="126">'LicenseKey.cpuId()' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="128">使用“String.IsNullOrEmpty”调用来替换 'LicenseKey.cpuId()' 中的 'string.operator ==(string, string)' 调用。</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="131">使用“String.IsNullOrEmpty”调用来替换 'LicenseKey.cpuId()' 中的 'string.operator ==(string, string)' 调用。</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="134">使用“String.IsNullOrEmpty”调用来替换 'LicenseKey.cpuId()' 中的 'string.operator ==(string, string)' 调用。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHash(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="31">在方法 'LicenseKey.GetHash(string)' 中，请在对 'mD' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#identifier(System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="117">修改 'LicenseKey.identifier(string, string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="110">使用“String.IsNullOrEmpty”调用来替换 'LicenseKey.identifier(string, string)' 中的 'string.operator ==(string, string)' 调用。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="103">在方法 'LicenseKey.identifier(string, string)' 中，请在对 'managementClass' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#identifier(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="73">'LicenseKey.identifier(string, string, string)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="91">修改 'LicenseKey.identifier(string, string, string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="84">使用“String.IsNullOrEmpty”调用来替换 'LicenseKey.identifier(string, string, string)' 中的 'string.operator ==(string, string)' 调用。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="75">在方法 'LicenseKey.identifier(string, string, string)' 中，请在对 'managementClass' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#macId()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="168">'LicenseKey.macId()' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#videoId()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\License" File="LicenseKey.cs" Line="164">'LicenseKey.videoId()' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Tasks">
       <Types>
        <Type Name="ITask" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Execute(System.Xml.XmlNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error">修改成员 'ITask.Execute(XmlNode)'，使它不再公开具体类型 'XmlNode'。请使用 IXPathNavigable 来表示 XML 数据源。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Task" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Type,System.Xml.XmlNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="Task.cs" Line="35">修改成员 'Task.Task(Type, XmlNode)'，使它不再公开具体类型 'XmlNode'。请使用 IXPathNavigable 来表示 XML 数据源。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="Task.cs" Line="40">在外部可见方法 'Task.Task(Type, XmlNode)' 中，请在使用参数“configNode”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Execute()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="Task.cs" Line="83">修改 'Task.Execute()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TaskManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Initialize(System.Xml.XmlNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="TaskManager.cs" Line="48">修改成员 'TaskManager.Initialize(XmlNode)'，使它不再公开具体类型 'XmlNode'。请使用 IXPathNavigable 来表示 XML 数据源。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="TaskManager.cs" Line="50">在外部可见方法 'TaskManager.Initialize(XmlNode)' 中，请在使用参数“node”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessException(Infrastructure.Crosscutting.Tasks.Task,System.Exception)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="TaskManager.cs" Line="26">修改 'TaskManager.ProcessException(Task, Exception)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="TaskManager.cs" Line="21">从未使用 'TaskManager.ProcessException(Task, Exception)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="exception" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="TaskManager.cs" Line="21">从未用过 'TaskManager.ProcessException(Task, Exception)' 的参数 'exception'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="task" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="TaskManager.cs" Line="21">从未用过 'TaskManager.ProcessException(Task, Exception)' 的参数 'task'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TaskThread" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">对 'TaskThread' 提供 Dispose(bool) 的可重写实现或将该类型标记为密封。对 Dispose(false) 的调用应仅清理本机资源。对 Dispose(true) 的调用应既清理托管资源又清理本机资源。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddTask(Infrastructure.Crosscutting.Tasks.Task)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="TaskThread.cs" Line="89">在外部可见方法 'TaskThread.AddTask(Task)' 中，请在使用参数“task”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Tasks" File="TaskThread.cs" Line="60">修改 'TaskThread.Dispose()'，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Utility">
       <Types>
        <Type Name="CodeTimer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentThread()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'CodeTimer.GetCurrentThread()'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetThreadTimes(System.IntPtr,System.Int64&amp;,System.Int64&amp;,System.Int64&amp;,System.Int64&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'CodeTimer.GetThreadTimes(IntPtr, out long, out long, out long, out long)'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CodeTimer+ActionDelegate" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">不要嵌套类型 'CodeTimer.ActionDelegate'。或者，更改其可访问性，使它在外部不可见。</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Util" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">类型名 'Util' 与在 .NET Framework 中定义的命名空间名称“System.Web.Util”整体或部分冲突。请重命名该类型以消除冲突。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ConvertByType(System.Reflection.PropertyInfo,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="46">在外部可见方法 'Util.ConvertByType(PropertyInfo, string)' 中，请在使用参数“pi”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get`1(System.Data.DataRow,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="67">在外部可见方法 'Util.Get&lt;T&gt;(DataRow, string)' 中，请在使用参数“dr”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPercent(System.Data.DataRow,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="81">在外部可见方法 'Util.GetPercent(DataRow, string)' 中，请在使用参数“dr”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPrice(System.Data.DataRow,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="95">在外部可见方法 'Util.GetPrice(DataRow, string)' 中，请在使用参数“dr”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasEventHandler(System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="24">在外部可见方法 'Util.HasEventHandler(object, string)' 中，请在使用参数“instance”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNullable(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="t" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="32">在方法 'Util.IsNullable(Type)' 中，考虑将参数名称 't' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="33">在外部可见方法 'Util.IsNullable(Type)' 中，请在使用参数“t”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TableToArray`1(System.Data.DataTable,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="15">在外部可见方法 'Util.TableToArray&lt;T&gt;(DataTable, string)' 中，请在使用参数“dt”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#To`1(!!0,System.Data.DataRow,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility" File="Util.cs" Line="113">在外部可见方法 'Util.To&lt;T&gt;(T, DataRow, string)' 中，请在使用参数“dr”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Utility.CommomHelper">
       <Types>
        <Type Name="Column" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="756">在外部可见方法 'Column.Column(string)' 中，请在使用参数“columnName”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ColumnName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'Column.ColumnName' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DbType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'Column.DbType' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Direction" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'Column.Direction' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParameterName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'Column.ParameterName' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Size" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'Column.Size' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Value" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'Column.Value' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExcelHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'ExcelHelper' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetExcelDataSet(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="ExcelHelper.cs" Line="106">在方法 'ExcelHelper.GetExcelDataSet(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="ExcelHelper.cs" Line="115">在方法 'ExcelHelper.GetExcelDataSet(string)' 中，'dt' 对象未按所有异常路径释放。请在对 'dt' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="ExcelHelper.cs" Line="110">在方法 'ExcelHelper.GetExcelDataSet(string)' 中，请在对 'dt' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="ExcelHelper.cs" Line="114">在方法 'ExcelHelper.GetExcelDataSet(string)' 中，请在对 'myCommand' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="ExcelHelper.cs" Line="114">传递给 'ExcelHelper.GetExcelDataSet(string)' 中的 'OleDbDataAdapter.OleDbDataAdapter(string, OleDbConnection)' 的查询字符串可能包含以下变量 's'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTableNames(System.String,System.Collections.Generic.List`1&lt;System.String&gt;&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="ExcelHelper.cs" Line="57">修改 'ExcelHelper.GetTableNames(string, out List&lt;string&gt;)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="ExcelHelper.cs" Line="52">在方法 'ExcelHelper.GetTableNames(string, out List&lt;string&gt;)' 中，'conn' 对象未按所有异常路径释放。请在对 'conn' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Contains(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="128">'FileHelper.Contains(string, string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Contains(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="157">'FileHelper.Contains(string, string, bool)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="isSearchChild" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="141">从未用过 'FileHelper.Contains(string, string, bool)' 的参数 'isSearchChild'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDirectory(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="504">修改 'FileHelper.CreateDirectory(string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="495">在外部可见方法 'FileHelper.CreateDirectory(string)' 中，请在使用参数“strPath”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="522">修改 'FileHelper.CreateFile(string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="519">在方法 'FileHelper.CreateFile(string)' 中，请在对 'File.CreateText(strPath)' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExistsFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="File" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="382">在成员 'FileHelper.ExistsFile(string)' 中，更正参数名称 'FilePath' 中“File”的大小写，将其改为“file”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDirectories(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="98">'FileHelper.GetDirectories(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDirectories(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="203">'FileHelper.GetDirectories(string, string, bool)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileNames(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="80">'FileHelper.GetFileNames(string, string, bool)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadConfig()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="332">修改 'FileHelper.ReadConfig()' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="227">修改 'FileHelper.ReadFile(string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadFileByExcel(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="293">在方法 'FileHelper.ReadFileByExcel(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadFileContent(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sb" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="275">'FileHelper.ReadFileContent(string)' 声明类型为 'StringBuilder' 的变量 'sb'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="278">在方法 'FileHelper.ReadFileContent(string)' 中，'sr' 对象未按所有异常路径释放。请在对 'sr' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadFileLine(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="244">更改 'FileHelper.ReadFileLine(string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="249">在方法 'FileHelper.ReadFileLine(string)' 中，'sr' 对象未按所有异常路径释放。请在对 'sr' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFile(System.Byte[],System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="470">修改 'FileHelper.WriteFile(byte[], string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="467">在外部可见方法 'FileHelper.WriteFile(byte[], string)' 中，请在使用参数“pReadByte”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFileLog(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="FileHelper.cs" Line="548">在方法 'FileHelper.WriteFileLog(string, string)' 中，'sw' 对象未按所有异常路径释放。请在对 'sw' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'HttpHelper' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateHttpWebRequest(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="290">'HttpHelper.CreateHttpWebRequest(string)' 创建类型为 'ApplicationException' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GETDataToUrl(System.String,System.Collections.Specialized.NameValueCollection,System.Net.IWebProxy,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="148">更正成员名称 'HttpHelper.GETDataToUrl(string, NameValueCollection, IWebProxy, Encoding)' 中“GET”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="148">修改 'HttpHelper.GETDataToUrl(string, NameValueCollection, IWebProxy, Encoding)' 以调用 'WebRequest.Create(Uri)' 而不调用 'WebRequest.Create(string)'。</Issue>
            </Message>
            <Message Id="ex" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="165">'HttpHelper.GETDataToUrl(string, NameValueCollection, IWebProxy, Encoding)' 声明类型为 'WebException' 的变量 'ex'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="148">将方法 'HttpHelper.GETDataToUrl(string, NameValueCollection, IWebProxy, Encoding)' 的参数 'url' 的类型从字符串改为 System.Uri，或者提供 'HttpHelper.GETDataToUrl(string, NameValueCollection, IWebProxy, Encoding)' 的重载，允许将 'url' 作为 System.Uri 对象来传递。</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="148">将 'HttpHelper.GETDataToUrl(string, NameValueCollection, IWebProxy, Encoding)' 的返回类型从字符串更改为 System.Uri。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GETDataToUrl(System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="135">更正成员名称 'HttpHelper.GETDataToUrl(string, NameValueCollection, Encoding)' 中“GET”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="135">将方法 'HttpHelper.GETDataToUrl(string, NameValueCollection, Encoding)' 的参数 'url' 的类型从字符串改为 System.Uri，或者提供 'HttpHelper.GETDataToUrl(string, NameValueCollection, Encoding)' 的重载，允许将 'url' 作为 System.Uri 对象来传递。</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="135">将 'HttpHelper.GETDataToUrl(string, NameValueCollection, Encoding)' 的返回类型从字符串更改为 System.Uri。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GETDataToUrl(System.String,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="123">更正成员名称 'HttpHelper.GETDataToUrl(string, Encoding)' 中“GET”的大小写，将其改为“Get”。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="123">将方法 'HttpHelper.GETDataToUrl(string, Encoding)' 的参数 'url' 的类型从字符串改为 System.Uri，或者提供 'HttpHelper.GETDataToUrl(string, Encoding)' 的重载，允许将 'url' 作为 System.Uri 对象来传递。</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="123">将 'HttpHelper.GETDataToUrl(string, Encoding)' 的返回类型从字符串更改为 System.Uri。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetResponseContent(System.Net.HttpWebRequest)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="190">修改 'HttpHelper.GetResponseContent(HttpWebRequest)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="230">可以在方法 'HttpHelper.GetResponseContent(HttpWebRequest)' 中多次释放对象 'responseStream'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 230</Issue>
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="230">可以在方法 'HttpHelper.GetResponseContent(HttpWebRequest)' 中多次释放对象 'responseStream'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 230</Issue>
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="230">可以在方法 'HttpHelper.GetResponseContent(HttpWebRequest)' 中多次释放对象 'responseStream'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 230</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostData(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Net.IWebProxy,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="108">将方法 'HttpHelper.PostData(string, string, NameValueCollection, IWebProxy, Encoding)' 的参数 'url' 的类型从字符串改为 System.Uri，或者提供 'HttpHelper.PostData(string, string, NameValueCollection, IWebProxy, Encoding)' 的重载，允许将 'url' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostData(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="91">将方法 'HttpHelper.PostData(string, string, NameValueCollection, Encoding)' 的参数 'url' 的类型从字符串改为 System.Uri，或者提供 'HttpHelper.PostData(string, string, NameValueCollection, Encoding)' 的重载，允许将 'url' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostData(System.String,System.String,System.Net.IWebProxy,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="75">将方法 'HttpHelper.PostData(string, string, IWebProxy, Encoding)' 的参数 'url' 的类型从字符串改为 System.Uri，或者提供 'HttpHelper.PostData(string, string, IWebProxy, Encoding)' 的重载，允许将 'url' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostData(System.String,System.String,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpHelper.cs" Line="59">将方法 'HttpHelper.PostData(string, string, Encoding)' 的参数 'url' 的类型从字符串改为 System.Uri，或者提供 'HttpHelper.PostData(string, string, Encoding)' 的重载，允许将 'url' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpsHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#encoding" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'HttpsHelper.encoding' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCookieString(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="190">将方法 'HttpsHelper.GetCookieString(string)' 的参数 'url' 的类型从字符串改为 System.Uri，或者提供 'HttpsHelper.GetCookieString(string)' 的重载，允许将 'url' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHttpRequestData(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="130">修改 'HttpsHelper.GetHttpRequestData(string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="62">在方法 'HttpsHelper.GetHttpRequestData(string)' 中，请在对 '_stream' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHttpRequestString(System.String,System.String,System.String,System.String,System.String,System.Text.Encoding,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Accept" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，更正参数名称 '_Accept' 中“Accept”的大小写，将其改为“accept”。</Issue>
            </Message>
            <Message Id="Content" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，更正参数名称 '_ContentType' 中“Content”的大小写，将其改为“content”。</Issue>
            </Message>
            <Message Id="Encoding" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，更正参数名称 '_Encoding' 中“Encoding”的大小写，将其改为“encoding”。</Issue>
            </Message>
            <Message Id="Method" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，更正参数名称 '_Method' 中“Method”的大小写，将其改为“method”。</Issue>
            </Message>
            <Message Id="Postdata" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，更正参数名称 '_Postdata' 中“Postdata”的大小写，将其改为“postdata”。</Issue>
            </Message>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，更正参数名称 '_URL' 中“URL”的大小写，将其改为“url”。</Issue>
            </Message>
            <Message Id="User" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，更正参数名称 '_UserAgent' 中“User”的大小写，将其改为“user”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，从参数名称 '_Accept' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，从参数名称 '_ContentType' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，从参数名称 '_Encoding' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，从参数名称 '_Method' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，从参数名称 '_Postdata' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，从参数名称 '_URL' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">在成员 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 中，从参数名称 '_UserAgent' 中移除下划线。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="222">将方法 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 的参数 '_URL' 的类型从字符串改为 System.Uri，或者提供 'HttpsHelper.GetHttpRequestString(string, string, string, string, string, Encoding, string)' 的重载，允许将 '_URL' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHttpRequestStringByNUll_Get(System.String,System.Text.Encoding)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="236">在成员 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding)' 中，更正参数名称 'URL' 中“URL”的大小写，将其改为“url”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="236">从成员名称 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding)' 中移除下划线。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="236">将方法 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding)' 的参数 'URL' 的类型从字符串改为 System.Uri，或者提供 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding)' 的重载，允许将 'URL' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHttpRequestStringByNUll_Get(System.String,System.Text.Encoding,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Accept" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="266">在成员 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding, string, string)' 中，更正参数名称 '_Accept' 中“Accept”的大小写，将其改为“accept”。</Issue>
            </Message>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="266">在成员 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding, string, string)' 中，更正参数名称 'URL' 中“URL”的大小写，将其改为“url”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="266">从成员名称 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding, string, string)' 中移除下划线。</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="266">在成员 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding, string, string)' 中，从参数名称 '_Accept' 中移除下划线。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="266">将方法 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding, string, string)' 的参数 'URL' 的类型从字符串改为 System.Uri，或者提供 'HttpsHelper.GetHttpRequestStringByNUll_Get(string, Encoding, string, string)' 的重载，允许将 'URL' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHttpRequestStringByNUll_GetBycookie(System.String,System.Text.Encoding,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="251">在成员 'HttpsHelper.GetHttpRequestStringByNUll_GetBycookie(string, Encoding, string)' 中，更正参数名称 'URL' 中“URL”的大小写，将其改为“url”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="251">从成员名称 'HttpsHelper.GetHttpRequestStringByNUll_GetBycookie(string, Encoding, string)' 中移除下划线。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="251">将方法 'HttpsHelper.GetHttpRequestStringByNUll_GetBycookie(string, Encoding, string)' 的参数 'URL' 的类型从字符串改为 System.Uri，或者提供 'HttpsHelper.GetHttpRequestStringByNUll_GetBycookie(string, Encoding, string)' 的重载，允许将 'URL' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHttpRequestStringByNUll_Post(System.String,System.String,System.Text.Encoding)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="281">在成员 'HttpsHelper.GetHttpRequestStringByNUll_Post(string, string, Encoding)' 中，更正参数名称 'URL' 中“URL”的大小写，将其改为“url”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="281">从成员名称 'HttpsHelper.GetHttpRequestStringByNUll_Post(string, string, Encoding)' 中移除下划线。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="281">将方法 'HttpsHelper.GetHttpRequestStringByNUll_Post(string, string, Encoding)' 的参数 'URL' 的类型从字符串改为 System.Uri，或者提供 'HttpsHelper.GetHttpRequestStringByNUll_Post(string, string, Encoding)' 的重载，允许将 'URL' 作为 System.Uri 对象来传递。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMemoryStream(System.IO.MemoryStream)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="147">'HttpsHelper.GetMemoryStream(MemoryStream)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUrl(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="294">在成员 'HttpsHelper.GetUrl(string)' 中，更正参数名称 'URL' 中“URL”的大小写，将其改为“url”。</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="294">将方法 'HttpsHelper.GetUrl(string)' 的参数 'URL' 的类型从字符串改为 System.Uri，或者提供 'HttpsHelper.GetUrl(string)' 的重载，允许将 'URL' 作为 System.Uri 对象来传递。</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="294">将 'HttpsHelper.GetUrl(string)' 的返回类型从字符串更改为 System.Uri。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="HttpsHelper.cs" Line="295">在外部可见方法 'HttpsHelper.GetUrl(string)' 中，请在使用参数“URL”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InternetGetCookieEx(System.String,System.String,System.Text.StringBuilder,System.Int32&amp;,System.Int32,System.Object)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'HttpsHelper.InternetGetCookieEx(string, string, StringBuilder, ref int, int, object)'。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">为了降低安全风险，请将参数 'pchURL' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode 或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或与系统相关的编码，请设置 BestFitMapping=false；为了提高安全性，还可以设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">为了降低安全风险，请将参数 'pchCookieName' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode 或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或与系统相关的编码，请设置 BestFitMapping=false；为了提高安全性，还可以设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">为了降低安全风险，请将参数 'pchCookieData' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode 或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或与系统相关的编码，请设置 BestFitMapping=false；为了提高安全性，还可以设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isToLower" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'HttpsHelper.isToLower' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OleDbHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'OleDbHelper' 中“Db”的大小写，将其改为“DB”。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ExecuteDataset(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="461">成员名称 'OleDbHelper.ExecuteDataset(OleDbConnection, CommandType, string)' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataset(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="480">成员名称 'OleDbHelper.ExecuteDataset(OleDbConnection, CommandType, string, params OleDbParameter[])' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="487">在方法 'OleDbHelper.ExecuteDataset(OleDbConnection, CommandType, string, params OleDbParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="482">在方法 'OleDbHelper.ExecuteDataset(OleDbConnection, CommandType, string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="486">在方法 'OleDbHelper.ExecuteDataset(OleDbConnection, CommandType, string, params OleDbParameter[])' 中，请在对 'da' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataset(System.Data.OleDb.OleDbConnection,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="515">成员名称 'OleDbHelper.ExecuteDataset(OleDbConnection, string, params object[])' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="520">在外部可见方法 'OleDbHelper.ExecuteDataset(OleDbConnection, string, params object[])' 中，请在使用参数“connection”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataset(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="547">成员名称 'OleDbHelper.ExecuteDataset(OleDbTransaction, CommandType, string)' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataset(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="566">成员名称 'OleDbHelper.ExecuteDataset(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="573">在方法 'OleDbHelper.ExecuteDataset(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="568">在方法 'OleDbHelper.ExecuteDataset(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="572">在方法 'OleDbHelper.ExecuteDataset(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，请在对 'da' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="569">在外部可见方法 'OleDbHelper.ExecuteDataset(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataset(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="601">成员名称 'OleDbHelper.ExecuteDataset(OleDbTransaction, string, params object[])' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="606">在外部可见方法 'OleDbHelper.ExecuteDataset(OleDbTransaction, string, params object[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataset(System.String,System.Data.CommandType,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="383">成员名称 'OleDbHelper.ExecuteDataset(string, CommandType, string)' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="402">成员名称 'OleDbHelper.ExecuteDataset(string, CommandType, string, params OleDbParameter[])' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataset(System.String,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dataset" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="429">成员名称 'OleDbHelper.ExecuteDataset(string, string, params object[])' 中的分立词条“Dataset”应表示为一个组合词“DataSet”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataTable(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="645">在方法 'OleDbHelper.ExecuteDataTable(OleDbConnection, CommandType, string, params OleDbParameter[])' 中，'dt' 对象未按所有异常路径释放。请在对 'dt' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="640">在方法 'OleDbHelper.ExecuteDataTable(OleDbConnection, CommandType, string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="644">在方法 'OleDbHelper.ExecuteDataTable(OleDbConnection, CommandType, string, params OleDbParameter[])' 中，请在对 'da' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="238">在方法 'OleDbHelper.ExecuteNonQuery(OleDbConnection, CommandType, string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.Data.OleDb.OleDbConnection,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="270">在外部可见方法 'OleDbHelper.ExecuteNonQuery(OleDbConnection, string, params object[])' 中，请在使用参数“connection”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="318">在方法 'OleDbHelper.ExecuteNonQuery(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="319">在外部可见方法 'OleDbHelper.ExecuteNonQuery(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="350">在外部可见方法 'OleDbHelper.ExecuteNonQuery(OleDbTransaction, string, params object[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[],Infrastructure.Crosscutting.Utility.CommomHelper.OleDbHelper+OleDbConnectionOwnership)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="690">在方法 'OleDbHelper.ExecuteReader(OleDbConnection, OleDbTransaction, CommandType, string, OleDbParameter[], OleDbHelper.OleDbConnectionOwnership)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.Data.OleDb.OleDbConnection,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="854">在外部可见方法 'OleDbHelper.ExecuteReader(OleDbConnection, string, params object[])' 中，请在使用参数“connection”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="900">在外部可见方法 'OleDbHelper.ExecuteReader(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="923">在外部可见方法 'OleDbHelper.ExecuteReader(OleDbTransaction, string, params object[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="746">在方法 'OleDbHelper.ExecuteReader(string, CommandType, string, params OleDbParameter[])' 中，请在对 'cn' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1052">在方法 'OleDbHelper.ExecuteScalar(OleDbConnection, CommandType, string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.Data.OleDb.OleDbConnection,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1085">在外部可见方法 'OleDbHelper.ExecuteScalar(OleDbConnection, string, params object[])' 中，请在使用参数“connection”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1133">在方法 'OleDbHelper.ExecuteScalar(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1134">在外部可见方法 'OleDbHelper.ExecuteScalar(OleDbTransaction, CommandType, string, params OleDbParameter[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1165">在外部可见方法 'OleDbHelper.ExecuteScalar(OleDbTransaction, string, params object[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteXmlReader(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="commandParameters" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1215">从未用过 'OleDbHelper.ExecuteXmlReader(OleDbConnection, CommandType, string, params OleDbParameter[])' 的参数 'commandParameters'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="commandText" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1215">从未用过 'OleDbHelper.ExecuteXmlReader(OleDbConnection, CommandType, string, params OleDbParameter[])' 的参数 'commandText'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="commandType" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1215">从未用过 'OleDbHelper.ExecuteXmlReader(OleDbConnection, CommandType, string, params OleDbParameter[])' 的参数 'commandType'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="connection" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1215">从未用过 'OleDbHelper.ExecuteXmlReader(OleDbConnection, CommandType, string, params OleDbParameter[])' 的参数 'connection'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteXmlReader(System.Data.OleDb.OleDbConnection,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1240">在外部可见方法 'OleDbHelper.ExecuteXmlReader(OleDbConnection, string, params object[])' 中，请在使用参数“connection”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteXmlReader(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="commandParameters" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1286">从未用过 'OleDbHelper.ExecuteXmlReader(OleDbTransaction, CommandType, string, params OleDbParameter[])' 的参数 'commandParameters'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="commandText" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1286">从未用过 'OleDbHelper.ExecuteXmlReader(OleDbTransaction, CommandType, string, params OleDbParameter[])' 的参数 'commandText'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="commandType" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1286">从未用过 'OleDbHelper.ExecuteXmlReader(OleDbTransaction, CommandType, string, params OleDbParameter[])' 的参数 'commandType'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
            <Message Id="transaction" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1286">从未用过 'OleDbHelper.ExecuteXmlReader(OleDbTransaction, CommandType, string, params OleDbParameter[])' 的参数 'transaction'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteXmlReader(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1311">在外部可见方法 'OleDbHelper.ExecuteXmlReader(OleDbTransaction, string, params object[])' 中，请在使用参数“transaction”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetExcelTableName(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1346">修改 'OleDbHelper.GetExcelTableName(string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1334">在方法 'OleDbHelper.GetExcelTableName(string)' 中，请在对 'conn' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetExcelTableNameList(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1350">更改 'OleDbHelper.GetExcelTableNameList(string)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OleDb.OleDbCommand,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="101">传递给 'OleDbHelper.PrepareCommand(OleDbCommand, OleDbConnection, OleDbTransaction, CommandType, string, OleDbParameter[])' 中的 'OleDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'commandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OleDbHelperParameterCache" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CacheParameterSet(System.String,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1439">'OleDbHelperParameterCache.CacheParameterSet(string, string, params OleDbParameter[])' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiscoverSpParameterSet(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1395">传递给 'OleDbHelperParameterCache.DiscoverSpParameterSet(string, string, bool)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'spName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCachedParameterSet(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="OleDbHelper.cs" Line="1452">'OleDbHelperParameterCache.GetCachedParameterSet(string, string)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PicDealHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddWaterPic(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="111">修改 'PicDealHelper.AddWaterPic(string, string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="Path" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="98">在成员 'PicDealHelper.AddWaterPic(string, string)' 中，更正参数名称 'Path' 中“Path”的大小写，将其改为“path”。</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="98">在成员 'PicDealHelper.AddWaterPic(string, string)' 中，更正参数名称 'Path_sypf' 中“Path”的大小写，将其改为“path”。</Issue>
            </Message>
            <Message Id="sypf" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="98">在成员 'PicDealHelper.AddWaterPic(string, string)' 中，更正参数名称 'Path_sypf' 中“sypf”的大小写，将其改为“Sypf”。</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="98">在成员 'PicDealHelper.AddWaterPic(string, string)' 中，从参数名称 'Path_sypf' 中移除下划线。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllowExt" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">似乎从未使用过字段 'PicDealHelper.AllowExt' 或只对它进行过赋值。请使用此字段或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetImgType()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="120">'PicDealHelper.GetImgType()' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MakeThumbnail(System.String,System.Int32,System.Int32,Infrastructure.Crosscutting.Declaration.ThumbnailMod)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="80">修改 'PicDealHelper.MakeThumbnail(string, int, int, ThumbnailMod)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="68">在方法 'PicDealHelper.MakeThumbnail(string, int, int, ThumbnailMod)' 中，'image2' 对象未按所有异常路径释放。请在对 'image2' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PicDealHelper.cs" Line="29">在外部可见方法 'PicDealHelper.MakeThumbnail(string, int, int, ThumbnailMod)' 中，请在使用参数“originalImagePath”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PinyinHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PinyinHelper.cs" Line="19">声明 'PinyinHelper' 中的静态字段时应初始化所有这些字段，并移除显式静态构造函数。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPinyin(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PinyinHelper.cs" Line="166">在外部可见方法 'PinyinHelper.GetPinyin(string)' 中，请在使用参数“chineseChars”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetShortPinyin(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="PinyinHelper.cs" Line="193">在外部可见方法 'PinyinHelper.GetShortPinyin(string)' 中，请在使用参数“chineseChars”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RegHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'RegHelper' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RmbHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'RmbHelper' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CmycurD(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="RmbHelper.cs" Line="130">修改 'RmbHelper.CmycurD(string)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializeHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'SerializeHelper' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Deserialize(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SerializeHelper.cs" Line="50">修改 'SerializeHelper.Deserialize(byte[])' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SerializeHelper.cs" Line="37">在方法 'SerializeHelper.Deserialize(byte[])' 中，考虑将参数名称 'b' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SerializeHelper.cs" Line="43">在方法 'SerializeHelper.Deserialize(byte[])' 中，请在对 'ms' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SerializeHelper.cs" Line="40">在外部可见方法 'SerializeHelper.Deserialize(byte[])' 中，请在使用参数“b”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Serialize(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SerializeHelper.cs" Line="17">在方法 'SerializeHelper.Serialize(object)' 中，考虑将参数名称 'o' 改为一个更能体现其意义的名称。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SerializeHelper.cs" Line="20">在方法 'SerializeHelper.Serialize(object)' 中，'ms' 对象未按所有异常路径释放。请在对 'ms' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlCreator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Columns" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'SqlCreator.Columns' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDeleteSql()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="671">如果可行，请将 'SqlCreator.GetDeleteSql()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetInsertSql()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="616">如果可行，请将 'SqlCreator.GetInsertSql()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSelectSql()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="694">如果可行，请将 'SqlCreator.GetSelectSql()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUpdateSql()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="642">如果可行，请将 'SqlCreator.GetUpdateSql()' 改为属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GroupBy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'SqlCreator.GroupBy' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderBy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'SqlCreator.OrderBy' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrimaryKey" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'SqlCreator.PrimaryKey' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TableName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'SqlCreator.TableName' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TableNameIsSubQuery" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'SqlCreator.TableNameIsSubQuery' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WhereColumns" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'SqlCreator.WhereColumns' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Delete(System.String,Infrastructure.Crosscutting.Utility.CommomHelper.SqlCreator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="286">在外部可见方法 'SqlHelper.Delete(string, SqlCreator)' 中，请在使用参数“creator”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="79">在方法 'SqlHelper.ExecuteNonQuery(SqlConnection, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="102">在方法 'SqlHelper.ExecuteNonQuery(SqlTransaction, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="103">在外部可见方法 'SqlHelper.ExecuteNonQuery(SqlTransaction, CommandType, string, params SqlParameter[])' 中，请在使用参数“trans”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="56">修改 'SqlHelper.ExecuteNonQuery(string, CommandType, string, params SqlParameter[])' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="46">在方法 'SqlHelper.ExecuteNonQuery(string, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="124">在方法 'SqlHelper.ExecuteReader(string, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="125">在方法 'SqlHelper.ExecuteReader(string, CommandType, string, params SqlParameter[])' 中，请在对 'conn' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="186">在方法 'SqlHelper.ExecuteScalar(SqlConnection, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="159">在方法 'SqlHelper.ExecuteScalar(string, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,Infrastructure.Crosscutting.Utility.CommomHelper.SqlCreator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="366">在外部可见方法 'SqlHelper.Exists(string, SqlCreator)' 中，请在使用参数“creator”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetParameterByColumns(Infrastructure.Crosscutting.Utility.CommomHelper.Column[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="240">在外部可见方法 'SqlHelper.GetParameterByColumns(Column[])' 中，请在使用参数“columns”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTable(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="403">在方法 'SqlHelper.GetTable(string, CommandType, string, params SqlParameter[])' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="402">在方法 'SqlHelper.GetTable(string, CommandType, string, params SqlParameter[])' 中，'dt' 对象未按所有异常路径释放。请在对 'dt' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="407">在方法 'SqlHelper.GetTable(string, CommandType, string, params SqlParameter[])' 中，请在对 'da' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Insert(System.String,Infrastructure.Crosscutting.Utility.CommomHelper.SqlCreator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="221">修改 'SqlHelper.Insert(string, SqlCreator)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="206">在外部可见方法 'SqlHelper.Insert(string, SqlCreator)' 中，请在使用参数“creator”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="452">传递给 'SqlHelper.PrepareCommand(SqlCommand, SqlConnection, SqlTransaction, CommandType, string, SqlParameter[])' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectReader(System.String,Infrastructure.Crosscutting.Utility.CommomHelper.SqlCreator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="306">在外部可见方法 'SqlHelper.SelectReader(string, SqlCreator)' 中，请在使用参数“creator”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectReader(System.String,System.String,Infrastructure.Crosscutting.Utility.CommomHelper.SqlCreator,Infrastructure.Crosscutting.Declaration.PageParam,System.Data.SqlClient.SqlParameter&amp;,System.Data.SqlClient.SqlParameter&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="4#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="327">考虑使用不需要将 'count' 作为 out 参数的设计。</Issue>
            </Message>
            <Message Id="5#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="327">考虑使用不需要将 'total' 作为 out 参数的设计。</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="330">'SqlHelper.SelectReader(string, string, SqlCreator, PageParam, out SqlParameter, out SqlParameter)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="2" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="328">在外部可见方法 'SqlHelper.SelectReader(string, string, SqlCreator, PageParam, out SqlParameter, out SqlParameter)' 中，请在使用参数“creator”之前先对其进行验证。</Issue>
            </Message>
            <Message Id="3" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="334">在外部可见方法 'SqlHelper.SelectReader(string, string, SqlCreator, PageParam, out SqlParameter, out SqlParameter)' 中，请在使用参数“page”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Update(System.String,Infrastructure.Crosscutting.Utility.CommomHelper.SqlCreator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="SqlHelper.cs" Line="260">在外部可见方法 'SqlHelper.Update(string, SqlCreator)' 中，请在使用参数“creator”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TextHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'TextHelper' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#NextDocNum(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="TextHelper.cs" Line="53">在外部可见方法 'TextHelper.NextDocNum(string)' 中，请在使用参数“code”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TimeHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'TimeHelper' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ToResult(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="TimeHelper.cs" Line="29">'TimeHelper.ToResult(string, string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToResult(System.String,System.String,Infrastructure.Crosscutting.Declaration.DiffResultFormat)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Utility\CommomHelper" File="TimeHelper.cs" Line="71">'TimeHelper.ToResult(string, string, DiffResultFormat)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Utility.CustomAttribute">
       <Types>
        <Type Name="LocalizableDescriptionAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'LocalizableDescriptionAttribute'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'LocalizableDescriptionAttribute' 的位置参数 'resourcesType' 添加一个公共的只读属性访问器。</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Validator">
       <Types>
        <Type Name="ValidationManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetValidator(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="ValidationManager.cs" Line="43">在成员 'ValidationManager.GetValidator(Type)' 中，更正参数名称 'ObjectType' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValidator`1()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="ValidationManager.cs" Line="33">在方法 'ValidationManager.GetValidator&lt;ObjectType&gt;()' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Validate(System.Collections.IEnumerable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Objects" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="ValidationManager.cs" Line="72">在成员 'ValidationManager.Validate(IEnumerable)' 中，更正参数名称 'Objects' 中“Objects”的大小写，将其改为“objects”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="ValidationManager.cs" Line="73">在外部可见方法 'ValidationManager.Validate(IEnumerable)' 中，请在使用参数“Objects”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Validate`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="ValidationManager.cs" Line="60">在成员 'ValidationManager.Validate&lt;ObjectType&gt;(ObjectType)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="ValidationManager.cs" Line="60">在方法 'ValidationManager.Validate&lt;ObjectType&gt;(ObjectType)' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Validator`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Validator&lt;Type&gt;' 上，将“T”作为泛型类型参数名称 'Type' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Cascade&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Contains&lt;DataType&gt;(Expression&lt;Func&lt;Type,IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Custom&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, Action&lt;Type&gt;):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.DoesNotContain&lt;DataType&gt;(Expression&lt;Func&lt;Type,IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Empty&lt;DataType&gt;(Expression&lt;Func&lt;Type,IEnumerable&lt;DataType&gt;&gt;&gt;, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Equal&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.GreaterThan&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.GreaterThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.IsDomain(Expression&lt;Func&lt;Type,String&gt;&gt;, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.IsEmailAddress(Expression&lt;Func&lt;Type,String&gt;&gt;, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.LessThan&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.LessThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.MaxLength&lt;DataType&gt;(Expression&lt;Func&lt;Type,IEnumerable&lt;DataType&gt;&gt;&gt;, Int32, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.MinLength&lt;DataType&gt;(Expression&lt;Func&lt;Type,IEnumerable&lt;DataType&gt;&gt;&gt;, Int32, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.NotEmpty&lt;DataType&gt;(Expression&lt;Func&lt;Type,IEnumerable&lt;DataType&gt;&gt;&gt;, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.NotEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.NotNaN(Expression&lt;Func&lt;Type,Double&gt;&gt;, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.NotRegex(Expression&lt;Func&lt;Type,String&gt;&gt;, String, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Regex(Expression&lt;Func&lt;Type,String&gt;&gt;, String, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, String):Validator&lt;Type&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute):Void&#xD;&#xA;Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type,DataType&gt;&gt;, DataType, String):Validator&lt;Type&gt;&#xD;&#xA;Validator&lt;Type&gt;.get_Rules():List&lt;IRule&lt;Type&gt;&gt;。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="28">'Validator&lt;Type&gt;.Validator()' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Validator&lt;Type&gt;..ctor()&#xD;&#xA;Validator&lt;Type&gt;.set_Rules(List&lt;IRule&lt;Type&gt;&gt;):Void。</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="52">修改 'Validator&lt;Type&gt;.Validator()' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRule(System.Reflection.PropertyInfo,Infrastructure.Crosscutting.Validator.BaseClasses.BaseAttribute)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="70">'Validator&lt;Type&gt;.AddRule(PropertyInfo, BaseAttribute)' 与来自 7 个不同命名空间中的 33 个不同类型耦合。请重写或重构该方法，以降低它的类耦合度，或者考虑将该方法移到与之紧密耦合的其他某个类型中。高于 40 的类耦合度表示可维护性较差，介于 40 和 30 之间的类耦合度表示可维护性适中，低于 30 的类耦合度表示可维护性较好。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Between`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="200">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="200">考虑 'Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="200">在成员 'Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="200">在成员 'Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="200">在成员 'Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="200">在成员 'Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="200">在方法 'Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="203">在外部可见方法 'Validator&lt;Type&gt;.Between&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Cascade`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="220">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.Cascade&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="220">考虑 'Validator&lt;Type&gt;.Cascade&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="220">在成员 'Validator&lt;Type&gt;.Cascade&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="220">在成员 'Validator&lt;Type&gt;.Cascade&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="220">在方法 'Validator&lt;Type&gt;.Cascade&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="223">在外部可见方法 'Validator&lt;Type&gt;.Cascade&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Contains`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="241">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.Contains&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="241">考虑 'Validator&lt;Type&gt;.Contains&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="241">在成员 'Validator&lt;Type&gt;.Contains&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="241">在成员 'Validator&lt;Type&gt;.Contains&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="241">在成员 'Validator&lt;Type&gt;.Contains&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="241">在方法 'Validator&lt;Type&gt;.Contains&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="244">在外部可见方法 'Validator&lt;Type&gt;.Contains&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Custom`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,System.Action`1&lt;!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="261">考虑 'Validator&lt;Type&gt;.Custom&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, Action&lt;Type&gt;)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Custom" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="261">在成员 'Validator&lt;Type&gt;.Custom&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, Action&lt;Type&gt;)' 中，更正参数名称 'CustomRule' 中“Custom”的大小写，将其改为“custom”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="261">在成员 'Validator&lt;Type&gt;.Custom&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, Action&lt;Type&gt;)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="261">在方法 'Validator&lt;Type&gt;.Custom&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, Action&lt;Type&gt;)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="262">在外部可见方法 'Validator&lt;Type&gt;.Custom&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, Action&lt;Type&gt;)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DoesNotContain`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="280">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.DoesNotContain&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="280">考虑 'Validator&lt;Type&gt;.DoesNotContain&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="280">在成员 'Validator&lt;Type&gt;.DoesNotContain&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="280">在成员 'Validator&lt;Type&gt;.DoesNotContain&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="280">在成员 'Validator&lt;Type&gt;.DoesNotContain&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="280">在方法 'Validator&lt;Type&gt;.DoesNotContain&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="283">在外部可见方法 'Validator&lt;Type&gt;.DoesNotContain&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Empty`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="300">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.Empty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="300">考虑 'Validator&lt;Type&gt;.Empty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="300">在成员 'Validator&lt;Type&gt;.Empty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="300">在成员 'Validator&lt;Type&gt;.Empty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="300">在方法 'Validator&lt;Type&gt;.Empty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="303">在外部可见方法 'Validator&lt;Type&gt;.Empty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equal`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="321">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.Equal&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="321">考虑 'Validator&lt;Type&gt;.Equal&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="321">在成员 'Validator&lt;Type&gt;.Equal&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="321">在成员 'Validator&lt;Type&gt;.Equal&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="321">在成员 'Validator&lt;Type&gt;.Equal&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="321">在方法 'Validator&lt;Type&gt;.Equal&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="324">在外部可见方法 'Validator&lt;Type&gt;.Equal&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GreaterThan`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="342">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.GreaterThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="342">考虑 'Validator&lt;Type&gt;.GreaterThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="342">在成员 'Validator&lt;Type&gt;.GreaterThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="342">在成员 'Validator&lt;Type&gt;.GreaterThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="342">在成员 'Validator&lt;Type&gt;.GreaterThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="342">在方法 'Validator&lt;Type&gt;.GreaterThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="345">在外部可见方法 'Validator&lt;Type&gt;.GreaterThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GreaterThanOrEqual`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="363">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.GreaterThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="363">考虑 'Validator&lt;Type&gt;.GreaterThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="363">在成员 'Validator&lt;Type&gt;.GreaterThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="363">在成员 'Validator&lt;Type&gt;.GreaterThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="363">在成员 'Validator&lt;Type&gt;.GreaterThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="363">在方法 'Validator&lt;Type&gt;.GreaterThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="366">在外部可见方法 'Validator&lt;Type&gt;.GreaterThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsDomain(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.String&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="381">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.IsDomain(Expression&lt;Func&lt;Type, string&gt;&gt;, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="381">考虑 'Validator&lt;Type&gt;.IsDomain(Expression&lt;Func&lt;Type, string&gt;&gt;, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="381">在成员 'Validator&lt;Type&gt;.IsDomain(Expression&lt;Func&lt;Type, string&gt;&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="381">在成员 'Validator&lt;Type&gt;.IsDomain(Expression&lt;Func&lt;Type, string&gt;&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="384">在外部可见方法 'Validator&lt;Type&gt;.IsDomain(Expression&lt;Func&lt;Type, string&gt;&gt;, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEmailAddress(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.String&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="399">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.IsEmailAddress(Expression&lt;Func&lt;Type, string&gt;&gt;, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="399">考虑 'Validator&lt;Type&gt;.IsEmailAddress(Expression&lt;Func&lt;Type, string&gt;&gt;, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="399">在成员 'Validator&lt;Type&gt;.IsEmailAddress(Expression&lt;Func&lt;Type, string&gt;&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="399">在成员 'Validator&lt;Type&gt;.IsEmailAddress(Expression&lt;Func&lt;Type, string&gt;&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="402">在外部可见方法 'Validator&lt;Type&gt;.IsEmailAddress(Expression&lt;Func&lt;Type, string&gt;&gt;, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LessThan`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="420">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.LessThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="420">考虑 'Validator&lt;Type&gt;.LessThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="420">在成员 'Validator&lt;Type&gt;.LessThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="420">在成员 'Validator&lt;Type&gt;.LessThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="420">在成员 'Validator&lt;Type&gt;.LessThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="420">在方法 'Validator&lt;Type&gt;.LessThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="423">在外部可见方法 'Validator&lt;Type&gt;.LessThan&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LessThanOrEqual`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="441">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.LessThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="441">考虑 'Validator&lt;Type&gt;.LessThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="441">在成员 'Validator&lt;Type&gt;.LessThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="441">在成员 'Validator&lt;Type&gt;.LessThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="441">在成员 'Validator&lt;Type&gt;.LessThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="441">在方法 'Validator&lt;Type&gt;.LessThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="444">在外部可见方法 'Validator&lt;Type&gt;.LessThanOrEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaxLength(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.String&gt;&gt;,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="475">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.MaxLength(Expression&lt;Func&lt;Type, string&gt;&gt;, int, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="475">考虑 'Validator&lt;Type&gt;.MaxLength(Expression&lt;Func&lt;Type, string&gt;&gt;, int, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="475">在成员 'Validator&lt;Type&gt;.MaxLength(Expression&lt;Func&lt;Type, string&gt;&gt;, int, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="475">在成员 'Validator&lt;Type&gt;.MaxLength(Expression&lt;Func&lt;Type, string&gt;&gt;, int, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="475">在成员 'Validator&lt;Type&gt;.MaxLength(Expression&lt;Func&lt;Type, string&gt;&gt;, int, string)' 中，更正参数名称 'MaxLength' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="475">更改成员名或参数名 'MaxLength'，使两者能相互区分。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="478">在外部可见方法 'Validator&lt;Type&gt;.MaxLength(Expression&lt;Func&lt;Type, string&gt;&gt;, int, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaxLength`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;&gt;&gt;,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="460">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.MaxLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="460">考虑 'Validator&lt;Type&gt;.MaxLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="460">在成员 'Validator&lt;Type&gt;.MaxLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="460">在成员 'Validator&lt;Type&gt;.MaxLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="460">在成员 'Validator&lt;Type&gt;.MaxLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 中，更正参数名称 'MaxLength' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="460">在方法 'Validator&lt;Type&gt;.MaxLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="460">更改成员名或参数名 'MaxLength'，使两者能相互区分。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="463">在外部可见方法 'Validator&lt;Type&gt;.MaxLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MinLength`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;&gt;&gt;,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="494">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.MinLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="494">考虑 'Validator&lt;Type&gt;.MinLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="494">在成员 'Validator&lt;Type&gt;.MinLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="494">在成员 'Validator&lt;Type&gt;.MinLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="494">在成员 'Validator&lt;Type&gt;.MinLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 中，更正参数名称 'MinLength' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="494">在方法 'Validator&lt;Type&gt;.MinLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="494">更改成员名或参数名 'MinLength'，使两者能相互区分。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="497">在外部可见方法 'Validator&lt;Type&gt;.MinLength&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, int, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotBetween`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="516">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="516">考虑 'Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="516">在成员 'Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="516">在成员 'Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="516">在成员 'Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="516">在成员 'Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="516">在方法 'Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="519">在外部可见方法 'Validator&lt;Type&gt;.NotBetween&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotEmpty`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="536">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.NotEmpty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="536">考虑 'Validator&lt;Type&gt;.NotEmpty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="536">在成员 'Validator&lt;Type&gt;.NotEmpty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="536">在成员 'Validator&lt;Type&gt;.NotEmpty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="536">在方法 'Validator&lt;Type&gt;.NotEmpty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="539">在外部可见方法 'Validator&lt;Type&gt;.NotEmpty&lt;DataType&gt;(Expression&lt;Func&lt;Type, IEnumerable&lt;DataType&gt;&gt;&gt;, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotEqual`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="557">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.NotEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="557">考虑 'Validator&lt;Type&gt;.NotEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="557">在成员 'Validator&lt;Type&gt;.NotEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="557">在成员 'Validator&lt;Type&gt;.NotEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="557">在成员 'Validator&lt;Type&gt;.NotEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="557">在方法 'Validator&lt;Type&gt;.NotEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="560">在外部可见方法 'Validator&lt;Type&gt;.NotEqual&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotNaN(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Double&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="576">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.NotNaN(Expression&lt;Func&lt;Type, double&gt;&gt;, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="576">考虑 'Validator&lt;Type&gt;.NotNaN(Expression&lt;Func&lt;Type, double&gt;&gt;, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, double&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="576">在成员 'Validator&lt;Type&gt;.NotNaN(Expression&lt;Func&lt;Type, double&gt;&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="576">在成员 'Validator&lt;Type&gt;.NotNaN(Expression&lt;Func&lt;Type, double&gt;&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="579">在外部可见方法 'Validator&lt;Type&gt;.NotNaN(Expression&lt;Func&lt;Type, double&gt;&gt;, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotRegex(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.String&gt;&gt;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="595">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.NotRegex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="595">考虑 'Validator&lt;Type&gt;.NotRegex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="595">在成员 'Validator&lt;Type&gt;.NotRegex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="595">在成员 'Validator&lt;Type&gt;.NotRegex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Regex" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="595">在成员 'Validator&lt;Type&gt;.NotRegex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'RegexString' 中“Regex”的大小写，将其改为“regex”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="595">在成员 'Validator&lt;Type&gt;.NotRegex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，考虑将参数名称 'RegexString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="598">在外部可见方法 'Validator&lt;Type&gt;.NotRegex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Regex(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.String&gt;&gt;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="614">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.Regex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="614">考虑 'Validator&lt;Type&gt;.Regex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="614">在成员 'Validator&lt;Type&gt;.Regex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="614">在成员 'Validator&lt;Type&gt;.Regex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Regex" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="614">在成员 'Validator&lt;Type&gt;.Regex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'RegexString' 中“Regex”的大小写，将其改为“regex”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="614">在成员 'Validator&lt;Type&gt;.Regex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，考虑将参数名称 'RegexString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="617">在外部可见方法 'Validator&lt;Type&gt;.Regex(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Required(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.String&gt;&gt;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="651">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.Required(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="651">考虑 'Validator&lt;Type&gt;.Required(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, string&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="651">在成员 'Validator&lt;Type&gt;.Required(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'DefaultValue' 中“Default”的大小写，将其改为“default”。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="651">在成员 'Validator&lt;Type&gt;.Required(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="651">在成员 'Validator&lt;Type&gt;.Required(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="654">在外部可见方法 'Validator&lt;Type&gt;.Required(Expression&lt;Func&lt;Type, string&gt;&gt;, string, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Required`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,!!0&gt;&gt;,!!0,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="635">用提供所有默认形参的重载来替换方法 'Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)'。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="635">考虑 'Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Expression&lt;Func&lt;Type, DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="635">在成员 'Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'DefaultValue' 中“Default”的大小写，将其改为“default”。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="635">在成员 'Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="635">在成员 'Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="635">在方法 'Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="638">在外部可见方法 'Validator&lt;Type&gt;.Required&lt;DataType&gt;(Expression&lt;Func&lt;Type, DataType&gt;&gt;, DataType, string)' 中，请在使用参数“ItemToValidate”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rules" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">通过移除属性 setter 将 'Validator&lt;Type&gt;.Rules' 更改为只读。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">更改 'Validator&lt;Type&gt;.Rules' 中的 'List&lt;IRule&lt;Type&gt;&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">考虑 'Validator&lt;Type&gt;.Rules' 不嵌套泛型类型 'List&lt;IRule&lt;Type&gt;&gt;' 的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Validate(!0)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="680">修改 'Validator&lt;Type&gt;.Validate(Type)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="672">在成员 'Validator&lt;Type&gt;.Validate(Type)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator" File="Validator.cs" Line="672">在虚拟/接口成员 'Validator&lt;Type&gt;.Validate(Type)' 中，重命名参数 'Object'，使它不再与保留的语言关键字“Object”冲突。如果使用保留的关键字作为虚拟/接口成员上参数的名称，则会使其他语言的使用者很难重写/实现该成员。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Validator.BaseClasses">
       <Types>
        <Type Name="BaseAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'BaseAttribute'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">由于属性 setter 对应于位置参数 'ErrorMessage'，因此请将它从 'BaseAttribute.ErrorMessage' 中移除或者降低它的可访问性。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\BaseClasses" File="BaseAttribute.cs" Line="22">在成员 'BaseAttribute.BaseAttribute(string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Rule`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">将 'Rule&lt;ObjectType, DataType&gt;' 中所有公共构造函数的可访问性改为 protected。</Issue>
          </Message>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Rule&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Rule&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\BaseClasses" File="Rule.cs" Line="24">'Rule&lt;ObjectType, DataType&gt;.Rule(Func&lt;ObjectType, DataType&gt;, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Rule&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, String)&#xD;&#xA;Rule&lt;ObjectType, DataType&gt;.set_ErrorMessage(String):Void。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\BaseClasses" File="Rule.cs" Line="24">'Rule&lt;ObjectType, DataType&gt;.Rule(Func&lt;ObjectType, DataType&gt;, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Rule&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, String)&#xD;&#xA;Rule&lt;ObjectType, DataType&gt;.set_ItemToValidate(Func&lt;ObjectType,DataType&gt;):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\BaseClasses" File="Rule.cs" Line="24">在成员 'Rule&lt;ObjectType, DataType&gt;.Rule(Func&lt;ObjectType, DataType&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\BaseClasses" File="Rule.cs" Line="24">在成员 'Rule&lt;ObjectType, DataType&gt;.Rule(Func&lt;ObjectType, DataType&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Validator.Exceptions">
       <Types>
        <Type Name="NotValid" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">将下列构造函数添加到 'NotValid': protected NotValid(SerializationInfo, StreamingContext)。</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">将下列构造函数添加到 'NotValid': public NotValid()。</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">将下列构造函数添加到 'NotValid': public NotValid(String, Exception)。</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">将 [Serializable] 添加到 'NotValid'，原因是此类型实现了 ISerializable。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Exception" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Exceptions" File="NotValid.cs" Line="20">在成员 'NotValid.NotValid(string)' 中，更正参数名称 'ExceptionText' 中“Exception”的大小写，将其改为“exception”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Validator.Interfaces">
       <Types>
        <Type Name="IRule`1" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'IRule&lt;ObjectType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Validate(!0)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'IRule&lt;ObjectType&gt;.Validate(ObjectType)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error">在虚拟/接口成员 'IRule&lt;ObjectType&gt;.Validate(ObjectType)' 中，重命名参数 'Object'，使它不再与保留的语言关键字“Object”冲突。如果使用保留的关键字作为虚拟/接口成员上参数的名称，则会使其他语言的使用者很难重写/实现该成员。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IValidator" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Validate(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">在成员 'IValidator.Validate(object)' 中，更正参数名称 'Object' 中“Object”的大小写，将其改为“object”。</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error">在成员 'IValidator.Validate(object)' 中，考虑将参数名称 'Object' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message Id="Object" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error">在虚拟/接口成员 'IValidator.Validate(object)' 中，重命名参数 'Object'，使它不再与保留的语言关键字“Object”冲突。如果使用保留的关键字作为虚拟/接口成员上参数的名称，则会使其他语言的使用者很难重写/实现该成员。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Infrastructure.Crosscutting.Validator.Rules">
       <Types>
        <Type Name="Between" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'Between'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'Between' 的位置参数 'MaxValue' 添加一个公共的只读属性访问器。</Issue>
           <Issue Certainty="95" Level="Error">为特性 'Between' 的位置参数 'MinValue' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'Between' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="77">用提供所有默认形参的重载来替换方法 'Between.Between(object, object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="77">在成员 'Between.Between(object, object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="77">在成员 'Between.Between(object, object, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="77">在成员 'Between.Between(object, object, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Between`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Between&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Between&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="28">'Between&lt;ObjectType, DataType&gt;.Between(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Between&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, DataType, String)&#xD;&#xA;Between&lt;ObjectType, DataType&gt;.set_MaxValue(DataType):Void。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="28">'Between&lt;ObjectType, DataType&gt;.Between(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Between&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, DataType, String)&#xD;&#xA;Between&lt;ObjectType, DataType&gt;.set_MinValue(DataType):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="28">在成员 'Between&lt;ObjectType, DataType&gt;.Between(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="28">在成员 'Between&lt;ObjectType, DataType&gt;.Between(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="28">在成员 'Between&lt;ObjectType, DataType&gt;.Between(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Between.cs" Line="28">在成员 'Between&lt;ObjectType, DataType&gt;.Between(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Cascade" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'Cascade'。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'Cascade' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Cascade.cs" Line="61">用提供所有默认形参的重载来替换方法 'Cascade.Cascade(string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Cascade.cs" Line="61">在成员 'Cascade.Cascade(string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Cascade`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Cascade&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Cascade&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Cascade.cs" Line="25">在成员 'Cascade&lt;ObjectType, DataType&gt;.Cascade(Func&lt;ObjectType, DataType&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Cascade.cs" Line="25">在成员 'Cascade&lt;ObjectType, DataType&gt;.Cascade(Func&lt;ObjectType, DataType&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Contains" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'Contains'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'Contains' 的位置参数 'Value' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'Contains' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Contains.cs" Line="71">用提供所有默认形参的重载来替换方法 'Contains.Contains(object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Contains.cs" Line="71">在成员 'Contains.Contains(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Contains.cs" Line="71">在成员 'Contains.Contains(object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Contains`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Contains&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Contains&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!1&gt;&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Contains.cs" Line="28">'Contains&lt;ObjectType, DataType&gt;.Contains(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Contains&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,IEnumerable&lt;DataType&gt;&gt;, DataType, String)&#xD;&#xA;Contains&lt;ObjectType, DataType&gt;.set_Value(DataType):Void。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Contains.cs" Line="28">考虑 'Contains&lt;ObjectType, DataType&gt;.Contains(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Contains.cs" Line="28">在成员 'Contains&lt;ObjectType, DataType&gt;.Contains(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Contains.cs" Line="28">在成员 'Contains&lt;ObjectType, DataType&gt;.Contains(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Contains.cs" Line="28">在成员 'Contains&lt;ObjectType, DataType&gt;.Contains(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Custom" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'Custom'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">由于属性 setter 对应于位置参数 'Action'，因此请将它从 'Custom.Action' 中移除或者降低它的可访问性。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'Custom' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Custom.cs" Line="63">用提供所有默认形参的重载来替换方法 'Custom.Custom(string, string)'。</Issue>
            </Message>
            <Message Id="Action" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Custom.cs" Line="63">在成员 'Custom.Custom(string, string)' 中，更正参数名称 'Action' 中“Action”的大小写，将其改为“action”。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Custom.cs" Line="63">在成员 'Custom.Custom(string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Custom`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Custom&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Custom&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,System.Action`1&lt;!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Custom.cs" Line="24">'Custom&lt;ObjectType, DataType&gt;.Custom(Func&lt;ObjectType, DataType&gt;, Action&lt;ObjectType&gt;)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Custom&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, Action&lt;ObjectType&gt;)&#xD;&#xA;Custom&lt;ObjectType, DataType&gt;.set_ActionToCall(Action&lt;ObjectType&gt;):Void。</Issue>
            </Message>
            <Message Id="Action" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Custom.cs" Line="24">在成员 'Custom&lt;ObjectType, DataType&gt;.Custom(Func&lt;ObjectType, DataType&gt;, Action&lt;ObjectType&gt;)' 中，更正参数名称 'ActionToCall' 中“Action”的大小写，将其改为“action”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Custom.cs" Line="24">在成员 'Custom&lt;ObjectType, DataType&gt;.Custom(Func&lt;ObjectType, DataType&gt;, Action&lt;ObjectType&gt;)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DoesNotContain" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'DoesNotContain'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'DoesNotContain' 的位置参数 'Value' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'DoesNotContain' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="DoesNotContain.cs" Line="70">用提供所有默认形参的重载来替换方法 'DoesNotContain.DoesNotContain(object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="DoesNotContain.cs" Line="70">在成员 'DoesNotContain.DoesNotContain(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="DoesNotContain.cs" Line="70">在成员 'DoesNotContain.DoesNotContain(object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DoesNotContain`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'DoesNotContain&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'DoesNotContain&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!1&gt;&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="DoesNotContain.cs" Line="28">'DoesNotContain&lt;ObjectType, DataType&gt;.DoesNotContain(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;DoesNotContain&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,IEnumerable&lt;DataType&gt;&gt;, DataType, String)&#xD;&#xA;DoesNotContain&lt;ObjectType, DataType&gt;.set_Value(DataType):Void。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="DoesNotContain.cs" Line="28">考虑 'DoesNotContain&lt;ObjectType, DataType&gt;.DoesNotContain(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 不嵌套泛型类型 'Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="DoesNotContain.cs" Line="28">在成员 'DoesNotContain&lt;ObjectType, DataType&gt;.DoesNotContain(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="DoesNotContain.cs" Line="28">在成员 'DoesNotContain&lt;ObjectType, DataType&gt;.DoesNotContain(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="DoesNotContain.cs" Line="28">在成员 'DoesNotContain&lt;ObjectType, DataType&gt;.DoesNotContain(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, DataType, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Empty" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'Empty'。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'Empty' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Empty.cs" Line="55">用提供所有默认形参的重载来替换方法 'Empty.Empty(string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Empty.cs" Line="55">在成员 'Empty.Empty(string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Empty`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Empty&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Empty&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!1&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Empty.cs" Line="26">考虑 'Empty&lt;ObjectType, DataType&gt;.Empty(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, string)' 不嵌套泛型类型 'Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Empty.cs" Line="26">在成员 'Empty&lt;ObjectType, DataType&gt;.Empty(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Empty.cs" Line="26">在成员 'Empty&lt;ObjectType, DataType&gt;.Empty(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Validate(!0)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Item" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Empty.cs" Line="37">'Empty&lt;ObjectType, DataType&gt;.Validate(ObjectType)' 声明类型为 'object' 的变量 'Item'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Equal" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'Equal'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'Equal' 的位置参数 'Value' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'Equal' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Equal.cs" Line="69">用提供所有默认形参的重载来替换方法 'Equal.Equal(object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Equal.cs" Line="69">在成员 'Equal.Equal(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Equal.cs" Line="69">在成员 'Equal.Equal(object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Equal`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Equal&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Equal&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Equal.cs" Line="28">'Equal&lt;ObjectType, DataType&gt;.Equal(Func&lt;ObjectType, DataType&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Equal&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, String)&#xD;&#xA;Equal&lt;ObjectType, DataType&gt;.set_Value(DataType):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Equal.cs" Line="28">在成员 'Equal&lt;ObjectType, DataType&gt;.Equal(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Equal.cs" Line="28">在成员 'Equal&lt;ObjectType, DataType&gt;.Equal(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Equal.cs" Line="28">在成员 'Equal&lt;ObjectType, DataType&gt;.Equal(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GreaterThan" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'GreaterThan'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'GreaterThan' 的位置参数 'Value' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'GreaterThan' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThan.cs" Line="69">用提供所有默认形参的重载来替换方法 'GreaterThan.GreaterThan(object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThan.cs" Line="69">在成员 'GreaterThan.GreaterThan(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThan.cs" Line="69">在成员 'GreaterThan.GreaterThan(object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GreaterThan`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'GreaterThan&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'GreaterThan&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThan.cs" Line="28">'GreaterThan&lt;ObjectType, DataType&gt;.GreaterThan(Func&lt;ObjectType, DataType&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;GreaterThan&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, String)&#xD;&#xA;GreaterThan&lt;ObjectType, DataType&gt;.set_MinValue(DataType):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThan.cs" Line="28">在成员 'GreaterThan&lt;ObjectType, DataType&gt;.GreaterThan(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThan.cs" Line="28">在成员 'GreaterThan&lt;ObjectType, DataType&gt;.GreaterThan(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThan.cs" Line="28">在成员 'GreaterThan&lt;ObjectType, DataType&gt;.GreaterThan(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GreaterThanOrEqual" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'GreaterThanOrEqual'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'GreaterThanOrEqual' 的位置参数 'Value' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'GreaterThanOrEqual' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThanOrEqual.cs" Line="69">用提供所有默认形参的重载来替换方法 'GreaterThanOrEqual.GreaterThanOrEqual(object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThanOrEqual.cs" Line="69">在成员 'GreaterThanOrEqual.GreaterThanOrEqual(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThanOrEqual.cs" Line="69">在成员 'GreaterThanOrEqual.GreaterThanOrEqual(object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GreaterThanOrEqual`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'GreaterThanOrEqual&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'GreaterThanOrEqual&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThanOrEqual.cs" Line="28">'GreaterThanOrEqual&lt;ObjectType, DataType&gt;.GreaterThanOrEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;GreaterThanOrEqual&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, String)&#xD;&#xA;GreaterThanOrEqual&lt;ObjectType, DataType&gt;.set_MinValue(DataType):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThanOrEqual.cs" Line="28">在成员 'GreaterThanOrEqual&lt;ObjectType, DataType&gt;.GreaterThanOrEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThanOrEqual.cs" Line="28">在成员 'GreaterThanOrEqual&lt;ObjectType, DataType&gt;.GreaterThanOrEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="GreaterThanOrEqual.cs" Line="28">在成员 'GreaterThanOrEqual&lt;ObjectType, DataType&gt;.GreaterThanOrEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IsDomain" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'IsDomain'。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'IsDomain' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="IsDomain.cs" Line="60">用提供所有默认形参的重载来替换方法 'IsDomain.IsDomain(string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="IsDomain.cs" Line="60">在成员 'IsDomain.IsDomain(string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IsDomain`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'IsDomain&lt;ObjectType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="IsDomain.cs" Line="28">在成员 'IsDomain&lt;ObjectType&gt;.IsDomain(Func&lt;ObjectType, string&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="IsDomain.cs" Line="28">在成员 'IsDomain&lt;ObjectType&gt;.IsDomain(Func&lt;ObjectType, string&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IsEmailAddress" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'IsEmailAddress'。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'IsEmailAddress' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="IsEmailAddress.cs" Line="57">用提供所有默认形参的重载来替换方法 'IsEmailAddress.IsEmailAddress(string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="IsEmailAddress.cs" Line="57">在成员 'IsEmailAddress.IsEmailAddress(string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IsEmailAddress`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'IsEmailAddress&lt;ObjectType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="IsEmailAddress.cs" Line="22">在成员 'IsEmailAddress&lt;ObjectType&gt;.IsEmailAddress(Func&lt;ObjectType, string&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="IsEmailAddress.cs" Line="22">在成员 'IsEmailAddress&lt;ObjectType&gt;.IsEmailAddress(Func&lt;ObjectType, string&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LessThan" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'LessThan'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'LessThan' 的位置参数 'Value' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'LessThan' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThan.cs" Line="69">用提供所有默认形参的重载来替换方法 'LessThan.LessThan(object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThan.cs" Line="69">在成员 'LessThan.LessThan(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThan.cs" Line="69">在成员 'LessThan.LessThan(object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LessThan`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'LessThan&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'LessThan&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThan.cs" Line="28">'LessThan&lt;ObjectType, DataType&gt;.LessThan(Func&lt;ObjectType, DataType&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;LessThan&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, String)&#xD;&#xA;LessThan&lt;ObjectType, DataType&gt;.set_MaxValue(DataType):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThan.cs" Line="28">在成员 'LessThan&lt;ObjectType, DataType&gt;.LessThan(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThan.cs" Line="28">在成员 'LessThan&lt;ObjectType, DataType&gt;.LessThan(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThan.cs" Line="28">在成员 'LessThan&lt;ObjectType, DataType&gt;.LessThan(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LessThanOrEqual" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'LessThanOrEqual'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'LessThanOrEqual' 的位置参数 'Value' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'LessThanOrEqual' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThanOrEqual.cs" Line="69">用提供所有默认形参的重载来替换方法 'LessThanOrEqual.LessThanOrEqual(object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThanOrEqual.cs" Line="69">在成员 'LessThanOrEqual.LessThanOrEqual(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThanOrEqual.cs" Line="69">在成员 'LessThanOrEqual.LessThanOrEqual(object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LessThanOrEqual`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'LessThanOrEqual&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'LessThanOrEqual&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThanOrEqual.cs" Line="28">'LessThanOrEqual&lt;ObjectType, DataType&gt;.LessThanOrEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;LessThanOrEqual&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, String)&#xD;&#xA;LessThanOrEqual&lt;ObjectType, DataType&gt;.set_MaxValue(DataType):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThanOrEqual.cs" Line="28">在成员 'LessThanOrEqual&lt;ObjectType, DataType&gt;.LessThanOrEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThanOrEqual.cs" Line="28">在成员 'LessThanOrEqual&lt;ObjectType, DataType&gt;.LessThanOrEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="LessThanOrEqual.cs" Line="28">在成员 'LessThanOrEqual&lt;ObjectType, DataType&gt;.LessThanOrEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MaxLength" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'MaxLength'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'MaxLength' 的位置参数 'MaxLength' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'MaxLength' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="116">用提供所有默认形参的重载来替换方法 'MaxLength.MaxLength(int, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="116">在成员 'MaxLength.MaxLength(int, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="116">在成员 'MaxLength.MaxLength(int, string)' 中，更正参数名称 'MaxLength' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MaxLength`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'MaxLength&lt;ObjectType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.String&gt;,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="73">'MaxLength&lt;ObjectType&gt;.MaxLength(Func&lt;ObjectType, string&gt;, int, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;MaxLength&lt;ObjectType&gt;..ctor(Func&lt;ObjectType,String&gt;, Int32, String)&#xD;&#xA;MaxLength&lt;ObjectType&gt;.set_MaxLengthAllowed(Int32):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="73">在成员 'MaxLength&lt;ObjectType&gt;.MaxLength(Func&lt;ObjectType, string&gt;, int, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="73">在成员 'MaxLength&lt;ObjectType&gt;.MaxLength(Func&lt;ObjectType, string&gt;, int, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="73">在成员 'MaxLength&lt;ObjectType&gt;.MaxLength(Func&lt;ObjectType, string&gt;, int, string)' 中，更正参数名称 'MaxLength' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MaxLength`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'MaxLength&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'MaxLength&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!1&gt;&gt;,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="28">'MaxLength&lt;ObjectType, DataType&gt;.MaxLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;MaxLength&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,IEnumerable&lt;DataType&gt;&gt;, Int32, String)&#xD;&#xA;MaxLength&lt;ObjectType, DataType&gt;.set_MaxLengthAllowed(Int32):Void。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="28">考虑 'MaxLength&lt;ObjectType, DataType&gt;.MaxLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 不嵌套泛型类型 'Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="28">在成员 'MaxLength&lt;ObjectType, DataType&gt;.MaxLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="28">在成员 'MaxLength&lt;ObjectType, DataType&gt;.MaxLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MaxLength.cs" Line="28">在成员 'MaxLength&lt;ObjectType, DataType&gt;.MaxLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 中，更正参数名称 'MaxLength' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MinLength" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'MinLength'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'MinLength' 的位置参数 'MinLength' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'MinLength' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MinLength.cs" Line="71">用提供所有默认形参的重载来替换方法 'MinLength.MinLength(int, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MinLength.cs" Line="71">在成员 'MinLength.MinLength(int, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MinLength.cs" Line="71">在成员 'MinLength.MinLength(int, string)' 中，更正参数名称 'MinLength' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MinLength`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'MinLength&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'MinLength&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!1&gt;&gt;,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MinLength.cs" Line="28">'MinLength&lt;ObjectType, DataType&gt;.MinLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;MinLength&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,IEnumerable&lt;DataType&gt;&gt;, Int32, String)&#xD;&#xA;MinLength&lt;ObjectType, DataType&gt;.set_MinLengthAllowed(Int32):Void。</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MinLength.cs" Line="28">考虑 'MinLength&lt;ObjectType, DataType&gt;.MinLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 不嵌套泛型类型 'Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MinLength.cs" Line="28">在成员 'MinLength&lt;ObjectType, DataType&gt;.MinLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MinLength.cs" Line="28">在成员 'MinLength&lt;ObjectType, DataType&gt;.MinLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="MinLength.cs" Line="28">在成员 'MinLength&lt;ObjectType, DataType&gt;.MinLength(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, int, string)' 中，更正参数名称 'MinLength' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotBetween" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'NotBetween'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'NotBetween' 的位置参数 'MaxValue' 添加一个公共的只读属性访问器。</Issue>
           <Issue Certainty="95" Level="Error">为特性 'NotBetween' 的位置参数 'MinValue' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'NotBetween' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="78">用提供所有默认形参的重载来替换方法 'NotBetween.NotBetween(object, object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="78">在成员 'NotBetween.NotBetween(object, object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="78">在成员 'NotBetween.NotBetween(object, object, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="78">在成员 'NotBetween.NotBetween(object, object, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotBetween`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'NotBetween&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'NotBetween&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="29">'NotBetween&lt;ObjectType, DataType&gt;.NotBetween(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;NotBetween&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, DataType, String)&#xD;&#xA;NotBetween&lt;ObjectType, DataType&gt;.set_MaxValue(DataType):Void。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="29">'NotBetween&lt;ObjectType, DataType&gt;.NotBetween(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;NotBetween&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, DataType, String)&#xD;&#xA;NotBetween&lt;ObjectType, DataType&gt;.set_MinValue(DataType):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="29">在成员 'NotBetween&lt;ObjectType, DataType&gt;.NotBetween(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="29">在成员 'NotBetween&lt;ObjectType, DataType&gt;.NotBetween(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Max" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="29">在成员 'NotBetween&lt;ObjectType, DataType&gt;.NotBetween(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 中，更正参数名称 'MaxValue' 中“Max”的大小写，将其改为“max”。</Issue>
            </Message>
            <Message Id="Min" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotBetween.cs" Line="29">在成员 'NotBetween&lt;ObjectType, DataType&gt;.NotBetween(Func&lt;ObjectType, DataType&gt;, DataType, DataType, string)' 中，更正参数名称 'MinValue' 中“Min”的大小写，将其改为“min”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotEmpty" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'NotEmpty'。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'NotEmpty' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEmpty.cs" Line="56">用提供所有默认形参的重载来替换方法 'NotEmpty.NotEmpty(string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEmpty.cs" Line="56">在成员 'NotEmpty.NotEmpty(string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotEmpty`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'NotEmpty&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'NotEmpty&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.Collections.Generic.IEnumerable`1&lt;!1&gt;&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEmpty.cs" Line="26">考虑 'NotEmpty&lt;ObjectType, DataType&gt;.NotEmpty(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, string)' 不嵌套泛型类型 'Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;' 的设计。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEmpty.cs" Line="26">在成员 'NotEmpty&lt;ObjectType, DataType&gt;.NotEmpty(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEmpty.cs" Line="26">在成员 'NotEmpty&lt;ObjectType, DataType&gt;.NotEmpty(Func&lt;ObjectType, IEnumerable&lt;DataType&gt;&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Validate(!0)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Item" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEmpty.cs" Line="37">'NotEmpty&lt;ObjectType, DataType&gt;.Validate(ObjectType)' 声明类型为 'object' 的变量 'Item'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotEqual" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'NotEqual'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">为特性 'NotEqual' 的位置参数 'Value' 添加一个公共的只读属性访问器。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'NotEqual' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEqual.cs" Line="69">用提供所有默认形参的重载来替换方法 'NotEqual.NotEqual(object, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEqual.cs" Line="69">在成员 'NotEqual.NotEqual(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEqual.cs" Line="69">在成员 'NotEqual.NotEqual(object, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotEqual`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'NotEqual&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'NotEqual&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEqual.cs" Line="28">'NotEqual&lt;ObjectType, DataType&gt;.NotEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;NotEqual&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, String)&#xD;&#xA;NotEqual&lt;ObjectType, DataType&gt;.set_Value(DataType):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEqual.cs" Line="28">在成员 'NotEqual&lt;ObjectType, DataType&gt;.NotEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEqual.cs" Line="28">在成员 'NotEqual&lt;ObjectType, DataType&gt;.NotEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotEqual.cs" Line="28">在成员 'NotEqual&lt;ObjectType, DataType&gt;.NotEqual(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'Value' 中“Value”的大小写，将其改为“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotNaN" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'NotNaN'。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'NotNaN' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotNaN.cs" Line="53">用提供所有默认形参的重载来替换方法 'NotNaN.NotNaN(string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotNaN.cs" Line="53">在成员 'NotNaN.NotNaN(string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotNaN`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'NotNaN&lt;ObjectType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.Double&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotNaN.cs" Line="24">在成员 'NotNaN&lt;ObjectType&gt;.NotNaN(Func&lt;ObjectType, double&gt;, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotNaN.cs" Line="24">在成员 'NotNaN&lt;ObjectType&gt;.NotNaN(Func&lt;ObjectType, double&gt;, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotRegex" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'NotRegex'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">由于属性 setter 对应于位置参数 'RegexString'，因此请将它从 'NotRegex.RegexString' 中移除或者降低它的可访问性。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'NotRegex' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="64">用提供所有默认形参的重载来替换方法 'NotRegex.NotRegex(string, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="64">在成员 'NotRegex.NotRegex(string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Regex" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="64">在成员 'NotRegex.NotRegex(string, string)' 中，更正参数名称 'RegexString' 中“Regex”的大小写，将其改为“regex”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="64">在成员 'NotRegex.NotRegex(string, string)' 中，考虑将参数名称 'RegexString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotRegex`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'NotRegex&lt;ObjectType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.String&gt;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="25">'NotRegex&lt;ObjectType&gt;.NotRegex(Func&lt;ObjectType, string&gt;, string, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;NotRegex&lt;ObjectType&gt;..ctor(Func&lt;ObjectType,String&gt;, String, String)&#xD;&#xA;NotRegex&lt;ObjectType&gt;.set_ValidationRegex(Regex):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="25">在成员 'NotRegex&lt;ObjectType&gt;.NotRegex(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="25">在成员 'NotRegex&lt;ObjectType&gt;.NotRegex(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Regex" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="25">在成员 'NotRegex&lt;ObjectType&gt;.NotRegex(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'RegexString' 中“Regex”的大小写，将其改为“regex”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="NotRegex.cs" Line="25">在成员 'NotRegex&lt;ObjectType&gt;.NotRegex(Func&lt;ObjectType, string&gt;, string, string)' 中，考虑将参数名称 'RegexString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Regex" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'Regex'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">由于属性 setter 对应于位置参数 'RegexString'，因此请将它从 'Regex.RegexString' 中移除或者降低它的可访问性。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'Regex' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="64">用提供所有默认形参的重载来替换方法 'Regex.Regex(string, string)'。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="64">在成员 'Regex.Regex(string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Regex" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="64">在成员 'Regex.Regex(string, string)' 中，更正参数名称 'RegexString' 中“Regex”的大小写，将其改为“regex”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="64">在成员 'Regex.Regex(string, string)' 中，考虑将参数名称 'RegexString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Regex`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Regex&lt;ObjectType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.String&gt;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="25">'Regex&lt;ObjectType&gt;.Regex(Func&lt;ObjectType, string&gt;, string, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Regex&lt;ObjectType&gt;..ctor(Func&lt;ObjectType,String&gt;, String, String)&#xD;&#xA;Regex&lt;ObjectType&gt;.set_ValidationRegex(Regex):Void。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="25">在成员 'Regex&lt;ObjectType&gt;.Regex(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="25">在成员 'Regex&lt;ObjectType&gt;.Regex(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
            <Message Id="Regex" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="25">在成员 'Regex&lt;ObjectType&gt;.Regex(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'RegexString' 中“Regex”的大小写，将其改为“regex”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Regex.cs" Line="25">在成员 'Regex&lt;ObjectType&gt;.Regex(Func&lt;ObjectType, string&gt;, string, string)' 中，考虑将参数名称 'RegexString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Required" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">如有可能，请密封 'Required'。</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">由于属性 setter 对应于位置参数 'DefaultValue'，因此请将它从 'Required.DefaultValue' 中移除或者降低它的可访问性。</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">虽然特性 'Required' 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Required.cs" Line="69">用提供所有默认形参的重载来替换方法 'Required.Required(object, string)'。</Issue>
            </Message>
            <Message Id="Default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Required.cs" Line="69">在成员 'Required.Required(object, string)' 中，更正参数名称 'DefaultValue' 中“Default”的大小写，将其改为“default”。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Required.cs" Line="69">在成员 'Required.Required(object, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Required`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Required&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'DataType' 的前缀。</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'Required&lt;ObjectType, DataType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,!1&gt;,!1,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Required.cs" Line="28">'Required&lt;ObjectType, DataType&gt;.Required(Func&lt;ObjectType, DataType&gt;, DataType, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;Required&lt;ObjectType, DataType&gt;..ctor(Func&lt;ObjectType,DataType&gt;, DataType, String)&#xD;&#xA;Required&lt;ObjectType, DataType&gt;.set_DefaultValue(DataType):Void。</Issue>
            </Message>
            <Message Id="Default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Required.cs" Line="28">在成员 'Required&lt;ObjectType, DataType&gt;.Required(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'DefaultValue' 中“Default”的大小写，将其改为“default”。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Required.cs" Line="28">在成员 'Required&lt;ObjectType, DataType&gt;.Required(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="Required.cs" Line="28">在成员 'Required&lt;ObjectType, DataType&gt;.Required(Func&lt;ObjectType, DataType&gt;, DataType, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RequiredString`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">在类型 'RequiredString&lt;ObjectType&gt;' 上，将“T”作为泛型类型参数名称 'ObjectType' 的前缀。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Func`2&lt;!0,System.String&gt;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="RequiredString.cs" Line="27">'RequiredString&lt;ObjectType&gt;.RequiredString(Func&lt;ObjectType, string&gt;, string, string)' 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: &#xD;&#xA;&#xD;&#xA;RequiredString&lt;ObjectType&gt;..ctor(Func&lt;ObjectType,String&gt;, String, String)&#xD;&#xA;RequiredString&lt;ObjectType&gt;.set_DefaultValue(String):Void。</Issue>
            </Message>
            <Message Id="Default" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="RequiredString.cs" Line="27">在成员 'RequiredString&lt;ObjectType&gt;.RequiredString(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'DefaultValue' 中“Default”的大小写，将其改为“default”。</Issue>
            </Message>
            <Message Id="Error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="RequiredString.cs" Line="27">在成员 'RequiredString&lt;ObjectType&gt;.RequiredString(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'ErrorMessage' 中“Error”的大小写，将其改为“error”。</Issue>
            </Message>
            <Message Id="Item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-03-19 14:24:54Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="F:\MyCode\GitHub_MyCommonLibrary\Infrastructure.Crosscutting\Validator\Rules" File="RequiredString.cs" Line="27">在成员 'RequiredString&lt;ObjectType&gt;.RequiredString(Func&lt;ObjectType, string&gt;, string, string)' 中，更正参数名称 'ItemToValidate' 中“Item”的大小写，将其改为“item”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>抽象类型不应具有构造函数</Name>
   <Description>抽象类型的公共构造函数没有意义，因为您无法创建抽象类型的实例。</Description>
   <Resolution Name="Default">将 {0} 中所有公共构造函数的可访问性改为 protected。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040">
   <Name>避免使用空接口</Name>
   <Description>接口应包含指定一组行为的成员。若要对类进行标记，请使用特性而不是空接口。</Description>
   <Resolution Name="Default">定义一个自定义特性来替换 {0}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182128(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>避免过度类耦合</Name>
   <Description>类耦合度较高的类型和方法很难维护。</Description>
   <Resolution Name="Method">{0} 与来自 {2} 个不同命名空间中的 {1} 个不同类型耦合。请重写或重构该方法，以降低它的类耦合度，或者考虑将该方法移到与之紧密耦合的其他某个类型中。高于 {3} 的类耦合度表示可维护性较差，介于 {3} 和 {4} 之间的类耦合度表示可维护性适中，低于 {4} 的类耦合度表示可维护性较好。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>避免过度复杂</Name>
   <Description>过于复杂的方法实现会增加理解和维护代码的难度。</Description>
   <Resolution Name="Default">{0} 的圈复杂度为 {1}。重写或重构该方法，以便将复杂度降低到 {2}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>避免使用类型极少的命名空间</Name>
   <Description>命名空间一般应具有五个以上的类型。</Description>
   <Resolution Name="Default">考虑将“{0}”中定义的类型与另一个命名空间合并。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>避免使用 out 参数</Name>
   <Description>使用 out 参数可能表示存在设计缺陷。虽然有时允许使用 out 参数，但频繁使用这些参数则表示设计没有遵守托管代码的设计原则。</Description>
   <Resolution Name="Default">考虑使用不需要将 {0} 作为 out 参数的设计。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>避免使用未调用的私有代码</Name>
   <Description>存在对外部不可见的未调用代码，该代码不是已知的运行时入口点。如果错误地引发此冲突，请向 Visual Studio 代码分析团队发送问题报告。</Description>
   <Resolution Name="Default">{0} 似乎没有上游 public 或 protected 调用方。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>避免使用未密封的特性</Name>
   <Description>密封特性类型可以提高性能。在对自定义特性进行反射期间，密封特性类型可以提高性能。</Description>
   <Resolution Name="Default">如有可能，请密封 {0}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>避免未使用的私有字段</Name>
   <Description>检测到程序集内有似乎未访问过的私有字段。如果错误地引发了此冲突，请向 Visual Studio 代码分析团队发送问题报告。</Description>
   <Resolution Name="Default">似乎从未使用过字段 {0} 或只对它进行过赋值。请使用此字段或将它移除。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>集合属性应为只读</Name>
   <Description>返回集合的属性应为只读，以确保用户无法完全替换后备存储。用户通过对集合调用相关方法仍然可以修改集合的内容。请注意，XmlSerializer 类对反序列化只读集合具有专门的支持。有关详细信息，请参见 XmlSerializer 概述。</Description>
   <Resolution Name="Default">通过移除属性 setter 将 {0} 更改为只读。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>组合词应采用正确的大小写</Name>
   <Description>避免从字典中现有的分立词条创建组合词。例如，不要创建诸如“StopWatch”或“PopUp”之类的组合词。这些词条在字典中已收录，其正确的大小写应为“Stopwatch”和“Popup”。</Description>
   <Resolution Name="MemberShouldBeCompoundWord">成员名称 {1} 中的分立词条“{0}”应表示为一个组合词“{2}”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>考虑将基类型作为参数传递</Name>
   <Description>如果仅使用参数的基类中的方法和属性，则将基类型用作方法的参数可以提高这些方法的重复利用率。例如，如果仅调用 Stream.Read()，则使用 Stream 而不是 FileStream 作为参数，这可以使该方法适用于所有类型的流，而不仅仅适用于 File 流。</Description>
   <Resolution Name="Default">考虑将 {1} 中参数 {0} 的类型从 {2} 改为其基类型 {3}。此方法在其实现中似乎只需要基类成员。如果方法签名中确实需要此派生类型，则禁止显示此冲突。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>不应使用默认形参</Name>
   <Description>某些编程语言不支持默认形参。用提供默认实参的方法重载来替换默认形参。</Description>
   <Resolution Name="Default">用提供所有默认形参的重载来替换方法 {0}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019">
   <Name>定义特性参数的访问器</Name>
   <Description>为命名参数和位置参数提供访问器。特性的每个位置参数都应声明一个名称相同但大小写不同的只读属性。每个命名参数都应提供一个名称相同但大小写不同的读/写属性。</Description>
   <Resolution Name="Default">为特性 {1} 的位置参数 {0} 添加一个公共的只读属性访问器。</Resolution>
   <Resolution Name="RemoveSetter">由于属性 setter 对应于位置参数 {1}，因此请将它从 {0} 中移除或者降低它的可访问性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182136(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>不要在构造函数中调用可重写的方法</Name>
   <Description>不应通过构造函数调用类中定义的虚方法。如果某个派生类已重写该虚方法，则将在调用派生类的构造函数前，调用此派生类重写后的方法。</Description>
   <Resolution Name="Default">{0} 包含调用链，该调用链导致调用此类所定义的虚方法。请检查以下调用堆栈，看是否有意外结果: {1}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>不要捕捉一般异常类型</Name>
   <Description>不应捕捉 Exception 或 SystemException。捕捉一般异常类型会使库用户看不到运行时问题，并会使调试复杂化。您应该仅捕捉自己可以进行适当处理的异常。</Description>
   <Resolution Name="Default">修改 {0} 以便捕捉比 {1} 更具体的异常，或者再次引发该异常。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
   <Name>不要在泛型类型中声明静态成员</Name>
   <Description>调用泛型类型的静态成员的语法很复杂，因为必须为每个调用指定类型参数。</Description>
   <Resolution Name="Default">将 {0} 从 {1} 中移除或者使其成为实例成员。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182139(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>不要声明可见实例字段</Name>
   <Description>在其声明类型的外部可见的实例字段会限制您更改这些数据项的实现详细信息的能力。请改用属性。属性不会降低可用性或性能，并且能够提供灵活性，因为它们隐藏了基础数据的实现详细信息。</Description>
   <Resolution Name="Default">由于字段 {0} 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>不要公开泛型列表</Name>
   <Description>不要在对象模型中公开 List&lt;T&gt;。应使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;。List&lt;T&gt; 应通过实现来使用，而不是在对象模型 API 中使用。List&lt;T&gt; 针对性能进行了优化，但代价是需要长期进行版本管理。例如，如果将 List&lt;T&gt; 返回到客户端代码，您将无法再在客户端代码修改集合时收到通知。</Description>
   <Resolution Name="Default">更改 {1} 中的 {0} 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>不要将泛型类型嵌套在成员签名中</Name>
   <Description>避免如下的 API: 要求用户以另一个泛型类型为类型实参来实例化一个泛型类型。这样的语法过于复杂。</Description>
   <Resolution Name="Default">考虑 {0} 不嵌套泛型类型 {1} 的设计。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>不要在意外的位置引发异常</Name>
   <Description>不要从意外的位置显式引发异常。用户不希望某些方法(如 Equals 和 GetHashCode)引发异常。因此，对这些方法的调用通常不包装在 try catch 块中。</Description>
   <Resolution Name="HasAllowedExceptions">{0} 创建 {1} 类型的异常，该异常类型不应当在这种类型的方法中引发。如果有可能会引发此异常实例，请使用其他异常类型，或者更改该方法的逻辑，使它不再引发异常。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>不要引发保留的异常类型</Name>
   <Description>用户代码不应创建和引发某些类型的异常，即属于运行时保留的异常类型或太通用的异常类型。太通用的异常类型包括 Exception、SystemException 和 ApplicationException。运行时保留的异常类型包括 ThreadAbortException、OutOfMemoryException、ExecutionEngineException 和 IndexOutOfRangeException。</Description>
   <Resolution Name="Reserved">{0} 创建类型为 {1} 的异常，该异常类型是运行时保留的，不应当由托管代码引发。如有可能会引发此异常实例，请使用其他异常类型。</Resolution>
   <Resolution Name="TooGeneric">{0} 创建类型为 {1} 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028">
   <Name>枚举存储应为 Int32</Name>
   <Description>使用小于 Int32 的类型基本上没有好处。如果出现下列情况，您可能需要使用大于 Int32 的类型: 1) 枚举值为标志，已存在或将存在多个值(&amp;amp;gt;32)；2) 该类型要与 Int32 不同，以便向后兼容。应避免使用非整型的基础类型。</Description>
   <Resolution Name="NotInt32">如有可能，请将 {0} 的基础类型设为 System.Int32，而不是 {1}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182147(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
   <Name>泛型方法应提供类型参数</Name>
   <Description>以下方法令人难以理解，在这些方法中，类型参数无法从参数中推理出来，因此必须在方法调用中定义。如果方法带有类型化为泛型方法类型参数的形参，则这些方法支持推理；如果方法没有类型化为泛型方法类型参数的形参，则这些方法不支持推理。</Description>
   <Resolution Name="Default">考虑使用 {0} 在任何对它的调用中都不需要显式类型参数 {1} 的设计。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182150(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>标识符的大小写应当正确</Name>
   <Description>类型、命名空间和成员标识符应采用 Pascal 大小写格式。参数标识符应采用 Camel 大小写格式。这些标识符内由两个字母组成的首字母缩略词应全部大写，例如，应采用 System.IO，而不是 System.Io。由三个或更多个字母组成的首字母缩略词应采用 Pascal 大小写格式，例如，应采用 System.Xml，而不是 System.XML。Pascal 大小写格式约定每个单词的首字母大写，如 BackColor。Camel 大小写格式约定第一个单词的首字母小写，所有后续单词的首字母都大写，如 backgroundColor。尽管有些由两个字母组成的首字母缩略词习惯采用不完全大写形式，但不能因此而排斥此规则。例如，“DbConnection”很常见，但并不正确，应采用 DBConnection。为了与现有的非托管符号方案兼容，可能需要违反此规则。但一般来说，这些符号在使用它们的程序集之外不可见。</Description>
   <Resolution Name="Member">更正成员名称 {1} 中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Resolution Name="MemberAbbreviation">更正成员名称 {1} 中“{0}”的大小写，将其改为“{2}”。“{2}”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Resolution>
   <Resolution Name="MemberParameter">在成员 {0} 中，更正参数名称 {2} 中“{1}”的大小写，将其改为“{3}”。</Resolution>
   <Resolution Name="MemberParameterAbbreviation">在成员 {0} 中，更正参数名称 {2} 中“{1}”的大小写，将其改为“{3}”。“{3}”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Resolution>
   <Resolution Name="Namespace">更正命名空间名称“{1}”中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Resolution Name="Type">更正类型名称 {1} 中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>标识符应正确拼写</Name>
   <Description>组成标识符的各单词不应缩写，并且应正确拼写。如果此规则对应识别的词条产生了误报，请将该词添加到 FxCop 自定义字典中。</Description>
   <Resolution Name="MemberMoreMeaningfulName">考虑将成员名称 {0} 改为一个更能体现其意义的名称。</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">在方法 {0} 中，考虑将参数名称 {1} 改为一个更能体现其意义的名称。</Resolution>
   <Resolution Name="MethodTypeParameterMoreMeaningfulName">在方法 {0} 中，考虑将泛型类型参数名称 {1} 改为一个更能体现其意义的名称。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
   <Name>标识符应以大小写之外的差别进行区分</Name>
   <Description>所使用的名称不应仅通过大小写差别来保持其唯一性。不论使用区分大小写的语言还是不区分大小写的语言，组件都必须完全可用。如果除大小写外其他上下文均相同，则不区分大小写的语言将无法区分两个名称，因此组件必须避免出现这种情况。</Description>
   <Resolution Name="Member">更改成员名 {0} 和“{1}”，使它们的差别不仅仅在于大小写。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182242(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715">
   <Name>标识符应具有正确的前缀</Name>
   <Description>使用字母“I”作为接口名称的前缀来表明该类型是一个接口，如 IFormattable。使用字母“T”作为泛型类型参数名称的前缀并为它们提供说明性名称，如 Dictionary&lt;TKey, TValue&gt;，但如果一个“T”已足以说明这是一个泛型类型参数名称，如 Collection&lt;T&gt;，则不必这样做。对于接口名称和类型参数名称应使用 Pascal 大小写格式。请慎用缩写词。不要使用下划线字符。在定义一对类/接口时(其中类是接口的标准实现)，请务必使用相似的名称。两者之间的差别仅在于接口名称带有字母 I 前缀，如 Component 和 IComponent。</Description>
   <Resolution Name="MethodTypeParameter">在方法 {0} 上，将“T”作为泛型类型参数名称 {1} 的前缀。</Resolution>
   <Resolution Name="TypeTypeParameter">在类型 {0} 上，将“T”作为泛型类型参数名称 {1} 的前缀。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182243(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>标识符不应包含类型名称</Name>
   <Description>应避免在参数和成员中使用特定于某一种语言的类型名称，避免在参数中使用数据类型标识符。类型名对于所有开发人员来说可能不够直观。建议选用通用名称，如“value”。如果不足以区分，应确保采用 .NET Framework 库中定义的类型名，并完全避免采用特定于某一种语言的类型名称。例如，特定于 C# 的类型名有“float”(如果通用名称不足以区分，则使用“Single”)和“ulong”(如果通用名称不足以区分，则使用“UInt64”)等等。</Description>
   <Resolution Name="LanguageIndependentMemberParameter">在成员 {0} 中，考虑将参数名称 {2} 中的数据类型标识符“{1}”替换为一个更通用的词条，如“value”。</Resolution>
   <Resolution Name="LanguageSpecificMember">考虑将成员名称 {1} 中特定于语言的数据类型标识符“{0}”替换为不依赖于语言的等效词条或者更通用的词条，如“value”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>标识符不应包含下划线</Name>
   <Description>指定标识符时不要使用下划线。系统为应用程序生成的某些 Visual Studio 标识符会包含下划线字符。通常情况下应避免在公共标识符中使用下划线字符。</Description>
   <Resolution Name="Member">从成员名称 {0} 中移除下划线。</Resolution>
   <Resolution Name="MemberParameter">在成员 {0} 中，从参数名称 {1} 中移除下划线。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>标识符不应与关键字冲突</Name>
   <Description>应避免使用与保留的语言关键字冲突的标识符。如果使用保留的语言关键字作为标识符，则会使其他语言的使用者很难使用您的 API。</Description>
   <Resolution Name="Member">重命名虚拟/接口成员 {0}，使它不再与保留的语言关键字“{1}”冲突。如果使用保留的关键字作为虚拟/接口成员的名称，则会使其他语言的使用者很难重写/实现该成员。</Resolution>
   <Resolution Name="MemberParameter">在虚拟/接口成员 {0} 中，重命名参数 {1}，使它不再与保留的语言关键字“{2}”冲突。如果使用保留的关键字作为虚拟/接口成员上参数的名称，则会使其他语言的使用者很难重写/实现该成员。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>正确实现 IDisposable</Name>
   <Description>所有 IDisposable 类型都应正确实现 Dispose 模式。</Description>
   <Resolution Name="DisposeImplementation">修改 {0}，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Resolution>
   <Resolution Name="ProvideDisposeBool">对 {0} 提供 Dispose(bool) 的可重写实现或将该类型标记为密封。对 Dispose(false) 的调用应仅清理本机资源。对 Dispose(true) 的调用应既清理托管资源又清理本机资源。</Resolution>
   <Resolution Name="RenameDispose">将 {0} 重命名为“Dispose”，并确保将其声明为 public 和 sealed。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
   <Name>实现标准异常构造函数</Name>
   <Description>正确实现一个自定义异常需要多个构造函数。缺少构造函数会使您的异常在某些情况下无法使用。例如，在 XML Web services 中处理异常需要序列化构造函数。</Description>
   <Resolution Name="MissingConstructor">将下列构造函数添加到 {0}: {1}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182151(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>以内联方式初始化引用类型的静态字段</Name>
   <Description>声明静态字段时，应初始化这些字段。初始化显式静态构造函数中的静态数据将导致代码性能较差。</Description>
   <Resolution Name="Default">声明 {0} 中的静态字段时应初始化所有这些字段，并移除显式静态构造函数。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>正确实例化参数异常</Name>
   <Description>传递给 ArgumentException 及其派生类型的构造函数的字符串参数应该是正确的。与 ArgumentException 相比，派生自 ArgumentException 的类型在 message 和 paramName 参数方面具有不一致的构造函数重载。</Description>
   <Resolution Name="IncorrectParameterName">方法 {0} 将“{1}”作为参数 {2} 传递给构造函数 {3}。请将此参数替换为该方法的某个参数名。请注意，所提供的参数名的大小写应与方法中声明的大小写完全一致。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>接口方法应可由子类型调用</Name>
   <Description>定义的显式方法实现具有私有可访问性。除非基类提供了具有相应可访问性的备用方法，否则从具有显式方法实现的类派生，并选择在类中重新声明它们的类不能调入基类实现。如果重写的基类方法已被显式接口实现所隐藏，则为了调入基类实现，派生类必须将基指针强制转换为相关接口。但是，通过此引用调用基类实现时，实际调用的将是派生类实现，这会导致递归调用，并最终导致堆栈溢出。</Description>
   <Resolution Name="Default">将 {0} 设置为密封(如果以前提供过此类，则为重大更改)，非显式实现该方法，或实现一个公开 {1} 的功能且对派生类可见的新方法。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018">
   <Name>用 AttributeUsageAttribute 标记特性</Name>
   <Description>AttributeUsage 特性指定特性的有效目标(请参见 System.AttributeTargets)，指定特性在目标上是否可以出现多次，以及特性是否可继承。</Description>
   <Resolution Name="Inherited">虽然特性 {0} 从其基类型继承了 AttributeUsage 特性，但您还是应该考虑在该类型中显式指定 AttributeUsage 特性，以便提高代码可读性和便于文档制作。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182158(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
   <Name>用 SerializableAttribute 标记 ISerializable 类型</Name>
   <Description>System.Runtime.Serialization.ISerializable 接口允许该类型自定义自身的序列化，而 Serializable 特性使运行时能够将该类型识别为可序列化的类型。</Description>
   <Resolution Name="Default">将 [Serializable] 添加到 {0}，原因是此类型实现了 ISerializable。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182350(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>将成员标记为 static</Name>
   <Description>不访问实例数据或调用实例方法的方法可标记为 Static (在 Visual Basic 中为 Shared)。这样，编译器会向这些成员发出非虚拟调用站点，以防止在运行时对每个调用进行旨在确保当前对象指针为非 null 的检查。这样可以使对性能比较敏感的代码获得显著的性能提升。在某些情况下，无法访问当前对象实例表明存在正确性问题。</Description>
   <Resolution Name="Default">从未使用 {0} 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059">
   <Name>成员不应公开某些具体类型</Name>
   <Description>成员不应公开某些具体类型。</Description>
   <Resolution Name="Xml">修改成员 {0}，使它不再公开具体类型 {1}。请使用 IXPathNavigable 来表示 XML 数据源。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182160(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>将 P/Invoke 移动到 NativeMethods 类</Name>
   <Description>此类型包含具有 DllImport 特性的成员。具有 DllImport 特性的成员应包含在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中。</Description>
   <Resolution Name="Default">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 {0}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>嵌套类型不应是可见的</Name>
   <Description>不要使用 public、protected 或 protected internal (Protected Friend)等嵌套类型作为类型的分组方式。使用命名空间实现此目的。嵌套类型仅在极为有限的情况下才是最佳设计。此外，不是所有的用户都能清楚地了解嵌套类型成员的可访问性。枚举数不受此规则限制。</Description>
   <Resolution Name="Default">不要嵌套类型 {0}。或者，更改其可访问性，使它在外部不可见。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>非常量字段不应是可见的</Name>
   <Description>除非您使用锁来小心地管理对静态字段的访问，否则这些字段应为常量。如果使用静态变量而不保证它们是线程安全的，则可能威胁到执行状态。此规则适用于托管代码库。如果分析的程序集是应用程序，则忽略此规则冲突通常是安全的。</Description>
   <Resolution Name="Default">考虑将 {0} 设为非公共的或使它成为常量。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719">
   <Name>参数名不应与成员名冲突</Name>
   <Description>参数名应有别于成员名。</Description>
   <Resolution Name="Default">更改成员名或参数名 {0}，使两者能相互区分。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182252(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234">
   <Name>传递 System.Uri 对象，而不传递字符串</Name>
   <Description>如果有两个重载方法，一个采用 System.Uri，另一个采用 System.String，则库代码永远不会调用基于字符串的重载方法。</Description>
   <Resolution Name="Default">修改 {0} 以调用 {1} 而不调用 {2}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182360(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>移除未使用的局部变量</Name>
   <Description>移除方法实现中未使用过的或只赋过值的局部变量。</Description>
   <Resolution Name="Default">{0} 声明类型为 {2} 的变量 {1}，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>再次引发以保留堆栈详细信息</Name>
   <Description>重复引发捕获的异常时，请使用 IL 再次引发指令保留原始堆栈详细信息。</Description>
   <Resolution Name="Default">{0} 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>检查未使用的参数</Name>
   <Description>检查在非虚方法的方法体中未使用的参数，以确保不存在应该访问这些参数的情况。未使用的参数会带来维护和性能开销。有时，与该规则冲突可能说明方法中存在实现 Bug，即，该参数实际上应该已在方法体中使用了。如果该参数由于向后兼容性而必须存在，请忽略关于此规则的警告。</Description>
   <Resolution Name="Default">从未用过 {1} 的参数 {0}。请移除该参数或在方法体中使用它。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>指定对 P/Invoke 字符串参数进行封送处理</Name>
   <Description>在将字符串封送为 ANSI (在 Win9x 上为 Auto)时，某些字符可能会改变。如果启用了最佳匹配映射，则采用 Unicode 编码时显示样式不同的字符串将封送到相同的 ANSI 字符串，这可能会导致错误的安全决策。禁用最佳匹配映射会降低此风险，因为所有没有等效项的字符都将映射到“?”。另外，请注意，CharSet.Ansi 是所有字符串的默认封送设置；Unicode 封送必须显式指定为 DllImport 或 StructLayout 的 CharSet 设置，或者指定为具有 Unicode (或与系统相关的) UnmanagedType 的 MarshalAs 特性。</Description>
   <Resolution Name="Parameter">为了降低安全风险，请将参数 {0} 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode 或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或与系统相关的编码，请设置 BestFitMapping=false；为了提高安全性，还可以设置 ThrowOnUnmappableChar=true。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>静态容器类型不应具有构造函数</Name>
   <Description>不需要创建只定义静态成员的类型的实例。如果没有指定构造函数，许多编译器都会自动添加公共的默认构造函数。为了避免出现这种情况，可能需要添加一个空的私有构造函数。</Description>
   <Resolution Name="CSharp2_0">由于类型 {0} 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>使用字符串长度测试是否有空字符串</Name>
   <Description>若要测试是否有空字符串，请检查 String.Length 是否等于零。对于如 "".Equals(someString) 和 String.Empty.Equals(someString) 之类的构造，其效率低于字符串长度测试。请使用 someString.Length == 0 检查来替换它们。</Description>
   <Resolution Name="IsNullOrEmpty">使用“String.IsNullOrEmpty”调用来替换 {1} 中的 {0} 调用。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>类型名不应与命名空间冲突</Name>
   <Description>应避免标识符与命名空间名称整体或部分冲突。应首选能够描述类型的用途或内容的名称。</Description>
   <Resolution Name="System">类型名 {0} 与在 .NET Framework 中定义的命名空间名称“{1}”整体或部分冲突。请重命名该类型以消除冲突。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI 参数不应为字符串</Name>
   <Description>如果某个参数的名称中包含“uri”、“url”或“urn”，并且该参数被类型化为字符串，则应将该参数的类型改为 System.Uri，除非有一个重载方法已将该参数类型化为 URI。</Description>
   <Resolution Name="Default">将方法 {1} 的参数 {0} 的类型从字符串改为 System.Uri，或者提供 {1} 的重载，允许将 {0} 作为 System.Uri 对象来传递。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
   <Name>URI 返回值不应是字符串</Name>
   <Description>如果某函数的名称中包含“uri”、“url”或“urn”，并且返回类型为字符串，则应将返回类型更改为 System.Uri。</Description>
   <Resolution Name="Default">将 {0} 的返回类型从字符串更改为 System.Uri。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182176(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>在适用处使用属性</Name>
   <Description>在大多数情况下，应使用属性而不是 Get/Set 方法。在下列情况下，方法比属性更可取: 第一，执行的是转换操作，操作开销大或具有显著的副作用；第二，执行的顺序很重要；第三，连续两次调用成员得到的结果不同；第四，静态成员却返回了可变的值；第五，成员返回了数组。</Description>
   <Resolution Name="Default">如果可行，请将 {0} 改为属性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>不要多次释放对象</Name>
   <Description>可以多次调用正确实现的 Dispose 方法，而不会引发异常。但是，并不保证所有情况下都会如此。若要避免生成 System.ObjectDisposedException，您不应对一个对象多次调用 Dispose。</Description>
   <Resolution Name="Default">可以在方法 {1} 中多次释放对象 {0}。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 230</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>丢失范围之前释放对象</Name>
   <Description>如果在对某个可释放对象的所有引用超出范围之前未显式释放该对象，则当垃圾回收器运行该对象的终结器时，会在某个不确定时间释放该对象。由于可能会发生阻止该对象的终结器运行的意外事件，因此应改为显式释放该对象。</Description>
   <Resolution Name="ExceptionEdge">在方法 {0} 中，{1} 对象未按所有异常路径释放。请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Resolution Name="NonExceptionEdge">在方法 {0} 中，请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100">
   <Name>检查 SQL 查询是否存在安全漏洞</Name>
   <Description>通过用户输入生成的 SQL 命令字符串容易受到 SQL 注入式攻击。Microsoft SQL Server 和其他数据库服务器支持存储过程和参数化 SQL 查询，这将降低受到注入式攻击的风险。</Description>
   <Resolution Name="WithNonLiterals">传递给 {1} 中的 {0} 的查询字符串可能包含以下变量 {2}。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062">
   <Name>验证公共方法的参数</Name>
   <Description>应检查传递给外部可见方法的所有引用参数是否为 Null (在 VB 中为 Nothing)。如果适用，在参数为 null 时，引发 System.ArgumentNullException。</Description>
   <Resolution Name="Default">在外部可见方法 {0} 中，请在使用参数“{1}”之前先对其进行验证。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
